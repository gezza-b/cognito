





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">



  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-d311c4a37b4a480a760dda55c72eb656b70f39154f15e1b7a7f6506e143d7ec0.css" integrity="sha256-0xHEo3tKSAp2DdpVxy62VrcPORVPFeG3p/ZQbhQ9fsA=" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-916c8c46e0b976dcff8b6ed03f7b21e6cf79abe9c9f5bcac8b7865b6eeb962cb.css" integrity="sha256-kWyMRuC5dtz/i27QP3sh5s95q+nJ9bysi3hltu65Yss=" media="all" rel="stylesheet" />
  
  
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/site-7b63da03f09e96bbc0cc73ccdc359a70e6e50464763a01e9dad2be433480d7ac.css" integrity="sha256-e2PaA/CelrvAzHPM3DWacOblBGR2OgHp2tK+QzSA16w=" media="all" rel="stylesheet" />
  

  <meta name="viewport" content="width=device-width">
  
  <title>amazon-cognito-identity-js/amazon-cognito-identity.min.js.map at master · aws/amazon-cognito-identity-js · GitHub</title>
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">


  <link rel="assets" href="https://assets-cdn.github.com/">
  
  <meta name="pjax-timeout" content="1000">
  
  <meta name="request-id" content="1737:48A7:3F8A971:66B9C8D:58ABD241" data-pjax-transient>
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="1737:48A7:3F8A971:66B9C8D:58ABD241" name="octolytics-dimension-request_id" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />



  <meta class="js-ga-set" name="dimension1" content="Logged Out">



      <meta name="hostname" content="github.com">
  <meta name="user-login" content="">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="NTBmMDJlZjUwMmM2ZWQ0Njk0ODM0NGUxNWQ4OTU4NjFiZWJiNzNhMWJmNzllZDc2NzJjZjY2ZWRkNzM4NWFhMnx7InJlbW90ZV9hZGRyZXNzIjoiNDkuMTk1LjEwOC43MyIsInJlcXVlc3RfaWQiOiIxNzM3OjQ4QTc6M0Y4QTk3MTo2NkI5QzhEOjU4QUJEMjQxIiwidGltZXN0YW1wIjoxNDg3NjU1NDk3LCJob3N0IjoiZ2l0aHViLmNvbSJ9">


  <meta name="html-safe-nonce" content="5775275bb345aeec424b585d5765cac0802d4fbc">

  <meta http-equiv="x-pjax-version" content="d697098765300946e948866944609e77">
  

    
  <meta name="description" content="Contribute to amazon-cognito-identity-js development by creating an account on GitHub.">
  <meta name="go-import" content="github.com/aws/amazon-cognito-identity-js git https://github.com/aws/amazon-cognito-identity-js.git">

  <meta content="2232217" name="octolytics-dimension-user_id" /><meta content="aws" name="octolytics-dimension-user_login" /><meta content="56260598" name="octolytics-dimension-repository_id" /><meta content="aws/amazon-cognito-identity-js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="56260598" name="octolytics-dimension-repository_network_root_id" /><meta content="aws/amazon-cognito-identity-js" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/aws/amazon-cognito-identity-js/commits/master.atom" rel="alternate" title="Recent Commits to amazon-cognito-identity-js:master" type="application/atom+xml">


    <link rel="canonical" href="https://github.com/aws/amazon-cognito-identity-js/blob/master/dist/amazon-cognito-identity.min.js.map" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

  </head>

  <body class="logged-out env-production windows vis-public page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



          <header class="site-header js-details-container Details" role="banner">
  <div class="container-responsive">
    <a class="header-logo-invertocat" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
    </a>

    <button class="btn-link float-right site-header-toggle js-details-target" type="button" aria-label="Toggle navigation">
      <svg aria-hidden="true" class="octicon octicon-three-bars" height="24" version="1.1" viewBox="0 0 12 16" width="18"><path fill-rule="evenodd" d="M11.41 9H.59C0 9 0 8.59 0 8c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zm0-4H.59C0 5 0 4.59 0 4c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zM.59 11H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1H.59C0 13 0 12.59 0 12c0-.59 0-1 .59-1z"/></svg>
    </button>

    <div class="site-header-menu">
      <nav class="site-header-nav">
        <a href="/personal" class="js-selected-navigation-item nav-item" data-ga-click="Header, click, Nav menu - item:personal" data-selected-links="/personal /personal">
          Personal
</a>        <a href="/open-source" class="js-selected-navigation-item nav-item" data-ga-click="Header, click, Nav menu - item:opensource" data-selected-links="/open-source /open-source/stories /open-source">
          Open source
</a>        <a href="/business" class="js-selected-navigation-item nav-item" data-ga-click="Header, click, Nav menu - item:business" data-selected-links="/business /business/partners /business/features /business/customers /business/why-github-for-work /business/security /business">
          Business
</a>        <a href="/explore" class="js-selected-navigation-item nav-item" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship /showcases /explore">
          Explore
</a>        <a href="/pricing" class="js-selected-navigation-item nav-item" data-ga-click="Header, click, Nav menu - item:pricing" data-selected-links="/pricing /pricing">
          Pricing
</a>      </nav>

      <div class="site-header-actions">
          <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/aws/amazon-cognito-identity-js/search" class="js-site-search-form" data-scoped-search-url="/aws/amazon-cognito-identity-js/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
      <div class="header-search-scope">This repository</div>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
    </label>
</form></div>


          <a class="text-bold" href="/login?return_to=%2Faws%2Famazon-cognito-identity-js%2Fblob%2Fmaster%2Fdist%2Famazon-cognito-identity.min.js.map" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
            <span class="text-gray">or</span>
            <a class="text-bold" href="/join?source=header-repo" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
      </div>
    </div>
  </div>
</header>


  </div>

  <div id="start-of-content" class="accessibility-aid"></div>

    <div id="js-flash-container">
</div>



  <div role="main">
      <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      



<div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
  <div class="container repohead-details-container">

    

<ul class="pagehead-actions">

  <li>
      <a href="/login?return_to=%2Faws%2Famazon-cognito-identity-js"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to watch a repository" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
    Watch
  </a>
  <a class="social-count" href="/aws/amazon-cognito-identity-js/watchers"
     aria-label="50 users are watching this repository">
    50
  </a>

  </li>

  <li>
      <a href="/login?return_to=%2Faws%2Famazon-cognito-identity-js"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
    Star
  </a>

    <a class="social-count js-social-count" href="/aws/amazon-cognito-identity-js/stargazers"
      aria-label="278 users starred this repository">
      278
    </a>

  </li>

  <li>
      <a href="/login?return_to=%2Faws%2Famazon-cognito-identity-js"
        class="btn btn-sm btn-with-count tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
        Fork
      </a>

    <a href="/aws/amazon-cognito-identity-js/network" class="social-count"
       aria-label="110 users forked this repository">
      110
    </a>
  </li>
</ul>

    <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/aws" class="url fn" rel="author">aws</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/aws/amazon-cognito-identity-js" data-pjax="#js-repo-pjax-container">amazon-cognito-identity-js</a></strong>

</h1>

  </div>
  <div class="container">
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/aws/amazon-cognito-identity-js" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /aws/amazon-cognito-identity-js" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/aws/amazon-cognito-identity-js/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /aws/amazon-cognito-identity-js/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="counter">31</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/aws/amazon-cognito-identity-js/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /aws/amazon-cognito-identity-js/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="counter">4</span>
      <meta itemprop="position" content="3">
</a>  </span>

  <a href="/aws/amazon-cognito-identity-js/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /aws/amazon-cognito-identity-js/projects">
    <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
    Projects
    <span class="counter">0</span>
</a>


  <a href="/aws/amazon-cognito-identity-js/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="pulse /aws/amazon-cognito-identity-js/pulse">
    <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"/></svg>
    Pulse
</a>
  <a href="/aws/amazon-cognito-identity-js/graphs" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors /aws/amazon-cognito-identity-js/graphs">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Graphs
</a>

</nav>

  </div>
</div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    

<a href="/aws/amazon-cognito-identity-js/blob/c14aa1eb6c24a71d8f5c57e01c7e6938050bc890/dist/amazon-cognito-identity.min.js.map" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:1e4c5c3e854e061459e5afb6962321d2 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <i>Branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/aws/amazon-cognito-identity-js/blob/master/dist/amazon-cognito-identity.min.js.map"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/aws/amazon-cognito-identity-js/blob/revert-117-update-readme-setup/dist/amazon-cognito-identity.min.js.map"
               data-name="revert-117-update-readme-setup"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                revert-117-update-readme-setup
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/aws/amazon-cognito-identity-js/tree/v1.15.0/dist/amazon-cognito-identity.min.js.map"
              data-name="v1.15.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.15.0">
                v1.15.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/aws/amazon-cognito-identity-js/tree/v1.14.0/dist/amazon-cognito-identity.min.js.map"
              data-name="v1.14.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.14.0">
                v1.14.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/aws/amazon-cognito-identity-js/tree/v1.13.0/dist/amazon-cognito-identity.min.js.map"
              data-name="v1.13.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.13.0">
                v1.13.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/aws/amazon-cognito-identity-js/tree/v1.12.0/dist/amazon-cognito-identity.min.js.map"
              data-name="v1.12.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.12.0">
                v1.12.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/aws/amazon-cognito-identity-js/tree/v1.11.0/dist/amazon-cognito-identity.min.js.map"
              data-name="v1.11.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v1.11.0">
                v1.11.0
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="BtnGroup float-right">
    <a href="/aws/amazon-cognito-identity-js/find/master"
          class="js-pjax-capture-input btn btn-sm BtnGroup-item"
          data-pjax
          data-hotkey="t">
      Find file
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
  </div>
  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/aws/amazon-cognito-identity-js"><span>amazon-cognito-identity-js</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/aws/amazon-cognito-identity-js/tree/master/dist"><span>dist</span></a></span><span class="separator">/</span><strong class="final-path">amazon-cognito-identity.min.js.map</strong>
  </div>
</div>


  <div class="commit-tease">
      <span class="float-right">
        <a class="commit-tease-sha" href="/aws/amazon-cognito-identity-js/commit/b6c02cf00af97a372ee03768f4f7470d9cdf2b90" data-pjax>
          b6c02cf
        </a>
        <relative-time datetime="2017-02-18T22:47:12Z">Feb 19, 2017</relative-time>
      </span>
      <div>
        <img alt="" class="avatar" data-canonical-src="https://0.gravatar.com/avatar/74e8052218da199fcb70dd538065a4e0?d=https%3A%2F%2Fassets-cdn.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png&amp;r=x&amp;s=140" height="20" src="https://camo.githubusercontent.com/572d9788f5254eac2f4acf78065b7df3a2843552/68747470733a2f2f302e67726176617461722e636f6d2f6176617461722f37346538303532323138646131393966636237306464353338303635613465303f643d68747470732533412532462532466173736574732d63646e2e6769746875622e636f6d253246696d6167657325324667726176617461727325324667726176617461722d757365722d3432302e706e6726723d7826733d313430" width="20" />
        <span class="user-mention">Robert Scott</span>
          <a href="/aws/amazon-cognito-identity-js/commit/b6c02cf00af97a372ee03768f4f7470d9cdf2b90" class="message" data-pjax="true" title="Always call callback in CognitoUser.getSession.

This change calls callback in the rare situation when
there is a CognitUser in local storage, but local storage
doesn&#39;t have an ID Token set.">Always call callback in CognitoUser.getSession.</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>8</strong>
         contributors
      </button>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="itrestian" href="/aws/amazon-cognito-identity-js/commits/master/dist/amazon-cognito-identity.min.js.map?author=itrestian"><img alt="@itrestian" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/18453633?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="simonbuchan" href="/aws/amazon-cognito-identity-js/commits/master/dist/amazon-cognito-identity.min.js.map?author=simonbuchan"><img alt="@simonbuchan" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/1840547?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="mk2" href="/aws/amazon-cognito-identity-js/commits/master/dist/amazon-cognito-identity.min.js.map?author=mk2"><img alt="@mk2" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/747840?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="mdurrant" href="/aws/amazon-cognito-identity-js/commits/master/dist/amazon-cognito-identity.min.js.map?author=mdurrant"><img alt="@mdurrant" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/1095505?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="johnf" href="/aws/amazon-cognito-identity-js/commits/master/dist/amazon-cognito-identity.min.js.map?author=johnf"><img alt="@johnf" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/42590?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="codynguyen" href="/aws/amazon-cognito-identity-js/commits/master/dist/amazon-cognito-identity.min.js.map?author=codynguyen"><img alt="@codynguyen" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/252787?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="chetanme" href="/aws/amazon-cognito-identity-js/commits/master/dist/amazon-cognito-identity.min.js.map?author=chetanme"><img alt="@chetanme" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/5608314?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="borisirota" href="/aws/amazon-cognito-identity-js/commits/master/dist/amazon-cognito-identity.min.js.map?author=borisirota"><img alt="@borisirota" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/5683472?v=3&amp;s=40" width="20" /> </a>


    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <img alt="@itrestian" height="24" src="https://avatars2.githubusercontent.com/u/18453633?v=3&amp;s=48" width="24" />
            <a href="/itrestian">itrestian</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@simonbuchan" height="24" src="https://avatars3.githubusercontent.com/u/1840547?v=3&amp;s=48" width="24" />
            <a href="/simonbuchan">simonbuchan</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@mk2" height="24" src="https://avatars3.githubusercontent.com/u/747840?v=3&amp;s=48" width="24" />
            <a href="/mk2">mk2</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@mdurrant" height="24" src="https://avatars3.githubusercontent.com/u/1095505?v=3&amp;s=48" width="24" />
            <a href="/mdurrant">mdurrant</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@johnf" height="24" src="https://avatars1.githubusercontent.com/u/42590?v=3&amp;s=48" width="24" />
            <a href="/johnf">johnf</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@codynguyen" height="24" src="https://avatars2.githubusercontent.com/u/252787?v=3&amp;s=48" width="24" />
            <a href="/codynguyen">codynguyen</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@chetanme" height="24" src="https://avatars2.githubusercontent.com/u/5608314?v=3&amp;s=48" width="24" />
            <a href="/chetanme">chetanme</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@borisirota" height="24" src="https://avatars0.githubusercontent.com/u/5683472?v=3&amp;s=48" width="24" />
            <a href="/borisirota">borisirota</a>
          </li>
      </ul>
    </div>
  </div>


<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/aws/amazon-cognito-identity-js/raw/master/dist/amazon-cognito-identity.min.js.map" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/aws/amazon-cognito-identity-js/blame/master/dist/amazon-cognito-identity.min.js.map" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/aws/amazon-cognito-identity-js/commits/master/dist/amazon-cognito-identity.min.js.map" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://windows.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <button type="button" class="btn-octicon disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
        </button>
        <button type="button" class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
        </button>
  </div>

  <div class="file-info">
      1 lines (1 sloc)
      <span class="file-info-divider"></span>
    258 KB
  </div>
</div>

  

  <div itemprop="text" class="blob-wrapper data type-text">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line">{&quot;version&quot;:3,&quot;sources&quot;:[&quot;webpack:///webpack/universalModuleDefinition&quot;,&quot;webpack:///amazon-cognito-identity.min.js&quot;,&quot;webpack:///webpack/bootstrap 03508c239c5db8678652&quot;,&quot;webpack:///./enhance.js&quot;,&quot;webpack:///external {\&quot;root\&quot;:[\&quot;AWSCognito\&quot;],\&quot;commonjs2\&quot;:\&quot;aws-sdk/global\&quot;,\&quot;commonjs\&quot;:\&quot;aws-sdk/global\&quot;,\&quot;amd\&quot;:\&quot;aws-sdk/global\&quot;}&quot;,&quot;webpack:///./src/AuthenticationHelper.js&quot;,&quot;webpack:///./src/CognitoAccessToken.js&quot;,&quot;webpack:///./src/CognitoIdToken.js&quot;,&quot;webpack:///./src/CognitoRefreshToken.js&quot;,&quot;webpack:///./src/CognitoUser.js&quot;,&quot;webpack:///./src/CognitoUserAttribute.js&quot;,&quot;webpack:///./src/CognitoUserSession.js&quot;,&quot;webpack:///./src/DateHelper.js&quot;,&quot;webpack:///./src/StorageHelper.js&quot;,&quot;webpack:///external {\&quot;root\&quot;:[\&quot;AWSCognito\&quot;,\&quot;CognitoIdentityServiceProvider\&quot;],\&quot;commonjs2\&quot;:\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;,\&quot;commonjs\&quot;:\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;,\&quot;amd\&quot;:\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;}&quot;,&quot;webpack:///external {\&quot;root\&quot;:[],\&quot;commonjs2\&quot;:\&quot;jsbn\&quot;,\&quot;commonjs\&quot;:\&quot;jsbn\&quot;,\&quot;amd\&quot;:\&quot;jsbn\&quot;}&quot;,&quot;webpack:///./src/AuthenticationDetails.js&quot;,&quot;webpack:///./src/CognitoUserPool.js&quot;,&quot;webpack:///./src/index.js&quot;],&quot;names&quot;:[&quot;root&quot;,&quot;factory&quot;,&quot;exports&quot;,&quot;module&quot;,&quot;require&quot;,&quot;define&quot;,&quot;amd&quot;,&quot;AmazonCognitoIdentity&quot;,&quot;AWSCognito&quot;,&quot;CognitoIdentityServiceProvider&quot;,&quot;this&quot;,&quot;__WEBPACK_EXTERNAL_MODULE_1__&quot;,&quot;__WEBPACK_EXTERNAL_MODULE_11__&quot;,&quot;__WEBPACK_EXTERNAL_MODULE_12__&quot;,&quot;modules&quot;,&quot;__webpack_require__&quot;,&quot;moduleId&quot;,&quot;installedModules&quot;,&quot;id&quot;,&quot;loaded&quot;,&quot;call&quot;,&quot;m&quot;,&quot;c&quot;,&quot;p&quot;,&quot;_interopRequireWildcard&quot;,&quot;obj&quot;,&quot;__esModule&quot;,&quot;newObj&quot;,&quot;key&quot;,&quot;Object&quot;,&quot;prototype&quot;,&quot;hasOwnProperty&quot;,&quot;default&quot;,&quot;_interopRequireDefault&quot;,&quot;defineProperty&quot;,&quot;value&quot;,&quot;_src&quot;,&quot;keys&quot;,&quot;forEach&quot;,&quot;enumerable&quot;,&quot;get&quot;,&quot;_cognitoidentityserviceprovider&quot;,&quot;_cognitoidentityserviceprovider2&quot;,&quot;enhancements&quot;,&quot;window&quot;,&quot;crypto&quot;,&quot;msCrypto&quot;,&quot;_classCallCheck&quot;,&quot;instance&quot;,&quot;Constructor&quot;,&quot;TypeError&quot;,&quot;_createClass&quot;,&quot;defineProperties&quot;,&quot;target&quot;,&quot;props&quot;,&quot;i&quot;,&quot;length&quot;,&quot;descriptor&quot;,&quot;configurable&quot;,&quot;writable&quot;,&quot;protoProps&quot;,&quot;staticProps&quot;,&quot;_global&quot;,&quot;_jsbn&quot;,&quot;initN&quot;,&quot;newPasswordRequiredChallengeUserAttributePrefix&quot;,&quot;AuthenticationHelper&quot;,&quot;PoolName&quot;,&quot;N&quot;,&quot;BigInteger&quot;,&quot;g&quot;,&quot;k&quot;,&quot;hexHash&quot;,&quot;toString&quot;,&quot;smallAValue&quot;,&quot;generateRandomSmallA&quot;,&quot;largeAValue&quot;,&quot;calculateA&quot;,&quot;infoBits&quot;,&quot;util&quot;,&quot;Buffer&quot;,&quot;poolName&quot;,&quot;hexRandom&quot;,&quot;lib&quot;,&quot;randomBytes&quot;,&quot;randomBigInt&quot;,&quot;smallABigInt&quot;,&quot;mod&quot;,&quot;randomPassword&quot;,&quot;SaltToHashDevices&quot;,&quot;verifierDevices&quot;,&quot;deviceGroupKey&quot;,&quot;username&quot;,&quot;generateRandomString&quot;,&quot;combinedString&quot;,&quot;hashedString&quot;,&quot;hash&quot;,&quot;padHex&quot;,&quot;verifierDevicesNotPadded&quot;,&quot;modPow&quot;,&quot;a&quot;,&quot;A&quot;,&quot;Error&quot;,&quot;B&quot;,&quot;UHexHash&quot;,&quot;finalU&quot;,&quot;buf&quot;,&quot;hashHex&quot;,&quot;sha256&quot;,&quot;Array&quot;,&quot;join&quot;,&quot;hexStr&quot;,&quot;ikm&quot;,&quot;salt&quot;,&quot;prk&quot;,&quot;hmac&quot;,&quot;infoBitsUpdate&quot;,&quot;buffer&quot;,&quot;concat&quot;,&quot;String&quot;,&quot;fromCharCode&quot;,&quot;slice&quot;,&quot;password&quot;,&quot;serverBValue&quot;,&quot;equals&quot;,&quot;UValue&quot;,&quot;calculateU&quot;,&quot;usernamePassword&quot;,&quot;usernamePasswordHash&quot;,&quot;xValue&quot;,&quot;gModPowXN&quot;,&quot;intValue2&quot;,&quot;subtract&quot;,&quot;multiply&quot;,&quot;sValue&quot;,&quot;add&quot;,&quot;hkdf&quot;,&quot;computehkdf&quot;,&quot;bigInt&quot;,&quot;hashStr&quot;,&quot;indexOf&quot;,&quot;CognitoAccessToken&quot;,&quot;_ref&quot;,&quot;arguments&quot;,&quot;undefined&quot;,&quot;AccessToken&quot;,&quot;jwtToken&quot;,&quot;payload&quot;,&quot;split&quot;,&quot;expiration&quot;,&quot;JSON&quot;,&quot;parse&quot;,&quot;base64&quot;,&quot;decode&quot;,&quot;exp&quot;,&quot;CognitoIdToken&quot;,&quot;IdToken&quot;,&quot;CognitoRefreshToken&quot;,&quot;RefreshToken&quot;,&quot;token&quot;,&quot;_AuthenticationHelper&quot;,&quot;_AuthenticationHelper2&quot;,&quot;_CognitoAccessToken&quot;,&quot;_CognitoAccessToken2&quot;,&quot;_CognitoIdToken&quot;,&quot;_CognitoIdToken2&quot;,&quot;_CognitoRefreshToken&quot;,&quot;_CognitoRefreshToken2&quot;,&quot;_CognitoUserSession&quot;,&quot;_CognitoUserSession2&quot;,&quot;_DateHelper&quot;,&quot;_DateHelper2&quot;,&quot;_CognitoUserAttribute&quot;,&quot;_CognitoUserAttribute2&quot;,&quot;_StorageHelper&quot;,&quot;_StorageHelper2&quot;,&quot;CognitoUser&quot;,&quot;data&quot;,&quot;Username&quot;,&quot;Pool&quot;,&quot;pool&quot;,&quot;Session&quot;,&quot;client&quot;,&quot;signInUserSession&quot;,&quot;authenticationFlowType&quot;,&quot;storage&quot;,&quot;getStorage&quot;,&quot;authDetails&quot;,&quot;callback&quot;,&quot;_this&quot;,&quot;authenticationHelper&quot;,&quot;getUserPoolId&quot;,&quot;dateHelper&quot;,&quot;authParameters&quot;,&quot;deviceKey&quot;,&quot;DEVICE_KEY&quot;,&quot;USERNAME&quot;,&quot;SRP_A&quot;,&quot;getLargeAValue&quot;,&quot;CHALLENGE_NAME&quot;,&quot;makeUnauthenticatedRequest&quot;,&quot;AuthFlow&quot;,&quot;ClientId&quot;,&quot;getClientId&quot;,&quot;AuthParameters&quot;,&quot;ClientMetadata&quot;,&quot;getValidationData&quot;,&quot;err&quot;,&quot;onFailure&quot;,&quot;challengeParameters&quot;,&quot;ChallengeParameters&quot;,&quot;USER_ID_FOR_SRP&quot;,&quot;SRP_B&quot;,&quot;SALT&quot;,&quot;getCachedDeviceKeyAndPassword&quot;,&quot;getPasswordAuthenticationKey&quot;,&quot;getPassword&quot;,&quot;dateNow&quot;,&quot;getNowString&quot;,&quot;signatureString&quot;,&quot;SECRET_BLOCK&quot;,&quot;challengeResponses&quot;,&quot;PASSWORD_CLAIM_SECRET_BLOCK&quot;,&quot;TIMESTAMP&quot;,&quot;PASSWORD_CLAIM_SIGNATURE&quot;,&quot;respondToAuthChallenge&quot;,&quot;challenge&quot;,&quot;challengeCallback&quot;,&quot;errChallenge&quot;,&quot;dataChallenge&quot;,&quot;code&quot;,&quot;message&quot;,&quot;toLowerCase&quot;,&quot;clearCachedDeviceKeyAndPassword&quot;,&quot;ChallengeName&quot;,&quot;ChallengeResponses&quot;,&quot;errAuthenticate&quot;,&quot;dataAuthenticate&quot;,&quot;challengeName&quot;,&quot;userAttributes&quot;,&quot;rawRequiredAttributes&quot;,&quot;requiredAttributes&quot;,&quot;userAttributesPrefix&quot;,&quot;getNewPasswordRequiredChallengeUserAttributePrefix&quot;,&quot;substr&quot;,&quot;newPasswordRequired&quot;,&quot;authenticateUserInternal&quot;,&quot;_this2&quot;,&quot;mfaRequired&quot;,&quot;customChallenge&quot;,&quot;getDeviceResponse&quot;,&quot;getCognitoUserSession&quot;,&quot;AuthenticationResult&quot;,&quot;cacheTokens&quot;,&quot;newDeviceMetadata&quot;,&quot;NewDeviceMetadata&quot;,&quot;onSuccess&quot;,&quot;generateHashDevice&quot;,&quot;DeviceGroupKey&quot;,&quot;DeviceKey&quot;,&quot;deviceSecretVerifierConfig&quot;,&quot;Salt&quot;,&quot;getSaltDevices&quot;,&quot;PasswordVerifier&quot;,&quot;getVerifierDevices&quot;,&quot;getRandomPassword&quot;,&quot;getAccessToken&quot;,&quot;getJwtToken&quot;,&quot;DeviceSecretVerifierConfig&quot;,&quot;DeviceName&quot;,&quot;navigator&quot;,&quot;userAgent&quot;,&quot;errConfirm&quot;,&quot;dataConfirm&quot;,&quot;cacheDeviceKeyAndPassword&quot;,&quot;UserConfirmationNecessary&quot;,&quot;newPassword&quot;,&quot;requiredAttributeData&quot;,&quot;_this3&quot;,&quot;finalUserAttributes&quot;,&quot;NEW_PASSWORD&quot;,&quot;_this4&quot;,&quot;confirmationCode&quot;,&quot;forceAliasCreation&quot;,&quot;ConfirmationCode&quot;,&quot;ForceAliasCreation&quot;,&quot;answerChallenge&quot;,&quot;_this5&quot;,&quot;ANSWER&quot;,&quot;_this6&quot;,&quot;SMS_MFA_CODE&quot;,&quot;oldUserPassword&quot;,&quot;newUserPassword&quot;,&quot;isValid&quot;,&quot;PreviousPassword&quot;,&quot;ProposedPassword&quot;,&quot;mfaOptions&quot;,&quot;mfaEnabled&quot;,&quot;DeliveryMedium&quot;,&quot;AttributeName&quot;,&quot;push&quot;,&quot;MFAOptions&quot;,&quot;_this7&quot;,&quot;clearCachedTokens&quot;,&quot;attributes&quot;,&quot;UserAttributes&quot;,&quot;userData&quot;,&quot;attributeList&quot;,&quot;attribute&quot;,&quot;Name&quot;,&quot;Value&quot;,&quot;userAttribute&quot;,&quot;UserAttributeNames&quot;,&quot;keyPrefix&quot;,&quot;idTokenKey&quot;,&quot;accessTokenKey&quot;,&quot;refreshTokenKey&quot;,&quot;getItem&quot;,&quot;idToken&quot;,&quot;accessToken&quot;,&quot;refreshToken&quot;,&quot;sessionData&quot;,&quot;cachedSession&quot;,&quot;getToken&quot;,&quot;refreshSession&quot;,&quot;_this8&quot;,&quot;REFRESH_TOKEN&quot;,&quot;lastUserKey&quot;,&quot;deviceKeyKey&quot;,&quot;authResult&quot;,&quot;authenticationResult&quot;,&quot;setItem&quot;,&quot;getIdToken&quot;,&quot;getRefreshToken&quot;,&quot;randomPasswordKey&quot;,&quot;deviceGroupKeyKey&quot;,&quot;removeItem&quot;,&quot;inputVerificationCode&quot;,&quot;Password&quot;,&quot;attributeName&quot;,&quot;Code&quot;,&quot;_this9&quot;,&quot;forgetSpecificDevice&quot;,&quot;result&quot;,&quot;DeviceRememberedStatus&quot;,&quot;limit&quot;,&quot;paginationToken&quot;,&quot;Limit&quot;,&quot;PaginationToken&quot;,&quot;_this10&quot;,&quot;CognitoUserAttribute&quot;,&quot;name&quot;,&quot;stringify&quot;,&quot;CognitoUserSession&quot;,&quot;now&quot;,&quot;Math&quot;,&quot;floor&quot;,&quot;Date&quot;,&quot;getExpiration&quot;,&quot;monthNames&quot;,&quot;weekNames&quot;,&quot;DateHelper&quot;,&quot;weekDay&quot;,&quot;getUTCDay&quot;,&quot;month&quot;,&quot;getUTCMonth&quot;,&quot;day&quot;,&quot;getUTCDate&quot;,&quot;hours&quot;,&quot;getUTCHours&quot;,&quot;minutes&quot;,&quot;getUTCMinutes&quot;,&quot;seconds&quot;,&quot;getUTCSeconds&quot;,&quot;year&quot;,&quot;getUTCFullYear&quot;,&quot;dataMemory&quot;,&quot;MemoryStorage&quot;,&quot;StorageHelper&quot;,&quot;storageWindow&quot;,&quot;localStorage&quot;,&quot;exception&quot;,&quot;AuthenticationDetails&quot;,&quot;ValidationData&quot;,&quot;validationData&quot;,&quot;_CognitoUser&quot;,&quot;_CognitoUser2&quot;,&quot;CognitoUserPool&quot;,&quot;UserPoolId&quot;,&quot;test&quot;,&quot;region&quot;,&quot;userPoolId&quot;,&quot;clientId&quot;,&quot;apiVersion&quot;,&quot;cognitoUser&quot;,&quot;returnData&quot;,&quot;user&quot;,&quot;userConfirmed&quot;,&quot;UserConfirmed&quot;,&quot;lastAuthUser&quot;,&quot;_AuthenticationDetails&quot;,&quot;_CognitoUserPool&quot;],&quot;mappings&quot;:&quot;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&quot;,&quot;file&quot;:&quot;amazon-cognito-identity.min.js&quot;,&quot;sourcesContent&quot;:[&quot;(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === &#39;object&#39; &amp;&amp; typeof module === &#39;object&#39;)\n\t\tmodule.exports = factory(require(\&quot;aws-sdk/global\&quot;), require(\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;), require(\&quot;jsbn\&quot;));\n\telse if(typeof define === &#39;function&#39; &amp;&amp; define.amd)\n\t\tdefine([\&quot;aws-sdk/global\&quot;, \&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;, \&quot;jsbn\&quot;], factory);\n\telse if(typeof exports === &#39;object&#39;)\n\t\texports[\&quot;AmazonCognitoIdentity\&quot;] = factory(require(\&quot;aws-sdk/global\&quot;), require(\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;), require(\&quot;jsbn\&quot;));\n\telse\n\t\troot[\&quot;AmazonCognitoIdentity\&quot;] = factory(root[\&quot;AWSCognito\&quot;], root[\&quot;AWSCognito\&quot;][\&quot;CognitoIdentityServiceProvider\&quot;], root);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition&quot;,&quot;(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === &#39;object&#39; &amp;&amp; typeof module === &#39;object&#39;)\n\t\tmodule.exports = factory(require(\&quot;aws-sdk/global\&quot;), require(\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;), require(\&quot;jsbn\&quot;));\n\telse if(typeof define === &#39;function&#39; &amp;&amp; define.amd)\n\t\tdefine([\&quot;aws-sdk/global\&quot;, \&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;, \&quot;jsbn\&quot;], factory);\n\telse if(typeof exports === &#39;object&#39;)\n\t\texports[\&quot;AmazonCognitoIdentity\&quot;] = factory(require(\&quot;aws-sdk/global\&quot;), require(\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;), require(\&quot;jsbn\&quot;));\n\telse\n\t\troot[\&quot;AmazonCognitoIdentity\&quot;] = factory(root[\&quot;AWSCognito\&quot;], root[\&quot;AWSCognito\&quot;][\&quot;CognitoIdentityServiceProvider\&quot;], root);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \&quot;\&quot;;\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _src = __webpack_require__(15);\n\t\n\tObject.keys(_src).forEach(function (key) {\n\t  if (key === \&quot;default\&quot; || key === \&quot;__esModule\&quot;) return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _src[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _cognitoidentityserviceprovider = __webpack_require__(11);\n\t\n\tvar _cognitoidentityserviceprovider2 = _interopRequireDefault(_cognitoidentityserviceprovider);\n\t\n\tvar enhancements = _interopRequireWildcard(_src);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj &amp;&amp; obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj &amp;&amp; obj.__esModule ? obj : { default: obj }; }\n\t\n\tObject.keys(enhancements).forEach(function (key) {\n\t  _cognitoidentityserviceprovider2.default[key] = enhancements[key];\n\t});\n\t\n\t// The version of crypto-browserify included by aws-sdk only\n\t// checks for window.crypto, not window.msCrypto as used by\n\t// IE 11 – so we set it explicitly here\n\tif (typeof window !== &#39;undefined&#39; &amp;&amp; !window.crypto &amp;&amp; window.msCrypto) {\n\t  window.crypto = window.msCrypto;\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \&quot;License\&quot;).\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\tor in the \&quot;license\&quot; file accompanying this file. This file is\n\tdistributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _jsbn = __webpack_require__(12);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\tvar initN = &#39;FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1&#39; + &#39;29024E088A67CC74020BBEA63B139B22514A08798E3404DD&#39; + &#39;EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245&#39; + &#39;E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED&#39; + &#39;EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D&#39; + &#39;C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F&#39; + &#39;83655D23DCA3AD961C62F356208552BB9ED529077096966D&#39; + &#39;670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B&#39; + &#39;E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9&#39; + &#39;DE2BCBF6955817183995497CEA956AE515D2261898FA0510&#39; + &#39;15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64&#39; + &#39;ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7&#39; + &#39;ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B&#39; + &#39;F12FFA06D98A0864D87602733EC86A64521F2B18177B200C&#39; + &#39;BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31&#39; + &#39;43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF&#39;;\n\t\n\tvar newPasswordRequiredChallengeUserAttributePrefix = &#39;userAttributes.&#39;;\n\t\n\t/** @class */\n\t\n\tvar AuthenticationHelper = function () {\n\t  /**\n\t   * Constructs a new AuthenticationHelper object\n\t   * @param {string} PoolName Cognito user pool name.\n\t   */\n\t  function AuthenticationHelper(PoolName) {\n\t    _classCallCheck(this, AuthenticationHelper);\n\t\n\t    this.N = new _jsbn.BigInteger(initN, 16);\n\t    this.g = new _jsbn.BigInteger(&#39;2&#39;);\n\t    this.k = new _jsbn.BigInteger(this.hexHash(&#39;00&#39; + this.N.toString(16) + &#39;0&#39; + this.g.toString(16)), 16);\n\t\n\t    this.smallAValue = this.generateRandomSmallA();\n\t    this.largeAValue = this.calculateA(this.smallAValue);\n\t\n\t    this.infoBits = new _global.util.Buffer(&#39;Caldera Derived Key&#39;, &#39;utf8&#39;);\n\t\n\t    this.poolName = PoolName;\n\t  }\n\t\n\t  /**\n\t   * @returns {BigInteger} small A, a random number\n\t   */\n\t\n\t\n\t  _createClass(AuthenticationHelper, [{\n\t    key: &#39;getSmallAValue&#39;,\n\t    value: function getSmallAValue() {\n\t      return this.smallAValue;\n\t    }\n\t\n\t    /**\n\t     * @returns {BigInteger} large A, a value generated from small A\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getLargeAValue&#39;,\n\t    value: function getLargeAValue() {\n\t      return this.largeAValue;\n\t    }\n\t\n\t    /**\n\t     * helper function to generate a random big integer\n\t     * @returns {BigInteger} a random value.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: &#39;generateRandomSmallA&#39;,\n\t    value: function generateRandomSmallA() {\n\t      var hexRandom = _global.util.crypto.lib.randomBytes(128).toString(&#39;hex&#39;);\n\t\n\t      var randomBigInt = new _jsbn.BigInteger(hexRandom, 16);\n\t      var smallABigInt = randomBigInt.mod(this.N);\n\t\n\t      return smallABigInt;\n\t    }\n\t\n\t    /**\n\t     * helper function to generate a random string\n\t     * @returns {string} a random value.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: &#39;generateRandomString&#39;,\n\t    value: function generateRandomString() {\n\t      return _global.util.crypto.lib.randomBytes(40).toString(&#39;base64&#39;);\n\t    }\n\t\n\t    /**\n\t     * @returns {string} Generated random value included in password hash.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getRandomPassword&#39;,\n\t    value: function getRandomPassword() {\n\t      return this.randomPassword;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} Generated random value included in devices hash.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getSaltDevices&#39;,\n\t    value: function getSaltDevices() {\n\t      return this.SaltToHashDevices;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} Value used to verify devices.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getVerifierDevices&#39;,\n\t    value: function getVerifierDevices() {\n\t      return this.verifierDevices;\n\t    }\n\t\n\t    /**\n\t     * Generate salts and compute verifier.\n\t     * @param {string} deviceGroupKey Devices to generate verifier for.\n\t     * @param {string} username User to generate verifier for.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;generateHashDevice&#39;,\n\t    value: function generateHashDevice(deviceGroupKey, username) {\n\t      this.randomPassword = this.generateRandomString();\n\t      var combinedString = &#39;&#39; + deviceGroupKey + username + &#39;:&#39; + this.randomPassword;\n\t      var hashedString = this.hash(combinedString);\n\t\n\t      var hexRandom = _global.util.crypto.lib.randomBytes(16).toString(&#39;hex&#39;);\n\t      this.SaltToHashDevices = this.padHex(new _jsbn.BigInteger(hexRandom, 16));\n\t\n\t      var verifierDevicesNotPadded = this.g.modPow(new _jsbn.BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N);\n\t\n\t      this.verifierDevices = this.padHex(verifierDevicesNotPadded);\n\t    }\n\t\n\t    /**\n\t     * Calculate the client&#39;s public value A = g^a%N\n\t     * with the generated random number a\n\t     * @param {BigInteger} a Randomly generated small A.\n\t     * @returns {BigInteger} Computed large A.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: &#39;calculateA&#39;,\n\t    value: function calculateA(a) {\n\t      var A = this.g.modPow(a, this.N);\n\t\n\t      if (A.mod(this.N).toString() === &#39;0&#39;) {\n\t        throw new Error(&#39;Illegal paramater. A mod N cannot be 0.&#39;);\n\t      }\n\t      return A;\n\t    }\n\t\n\t    /**\n\t     * Calculate the client&#39;s value U which is the hash of A and B\n\t     * @param {BigInteger} A Large A value.\n\t     * @param {BigInteger} B Server B value.\n\t     * @returns {BigInteger} Computed U value.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: &#39;calculateU&#39;,\n\t    value: function calculateU(A, B) {\n\t      this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n\t      var finalU = new _jsbn.BigInteger(this.UHexHash, 16);\n\t\n\t      return finalU;\n\t    }\n\t\n\t    /**\n\t     * Calculate a hash from a bitArray\n\t     * @param {Buffer} buf Value to hash.\n\t     * @returns {String} Hex-encoded hash.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: &#39;hash&#39;,\n\t    value: function hash(buf) {\n\t      var hashHex = _global.util.crypto.sha256(buf, &#39;hex&#39;);\n\t      return new Array(64 - hashHex.length).join(&#39;0&#39;) + hashHex;\n\t    }\n\t\n\t    /**\n\t     * Calculate a hash from a hex string\n\t     * @param {String} hexStr Value to hash.\n\t     * @returns {String} Hex-encoded hash.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: &#39;hexHash&#39;,\n\t    value: function hexHash(hexStr) {\n\t      return this.hash(new _global.util.Buffer(hexStr, &#39;hex&#39;));\n\t    }\n\t\n\t    /**\n\t     * Standard hkdf algorithm\n\t     * @param {Buffer} ikm Input key material.\n\t     * @param {Buffer} salt Salt value.\n\t     * @returns {Buffer} Strong key material.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: &#39;computehkdf&#39;,\n\t    value: function computehkdf(ikm, salt) {\n\t      var prk = _global.util.crypto.hmac(salt, ikm, &#39;buffer&#39;, &#39;sha256&#39;);\n\t      var infoBitsUpdate = _global.util.buffer.concat([this.infoBits, new _global.util.Buffer(String.fromCharCode(1), &#39;utf8&#39;)]);\n\t      var hmac = _global.util.crypto.hmac(prk, infoBitsUpdate, &#39;buffer&#39;, &#39;sha256&#39;);\n\t      return hmac.slice(0, 16);\n\t    }\n\t\n\t    /**\n\t     * Calculates the final hkdf based on computed S value, and computed U value and the key\n\t     * @param {String} username Username.\n\t     * @param {String} password Password.\n\t     * @param {BigInteger} serverBValue Server B value.\n\t     * @param {BigInteger} salt Generated salt.\n\t     * @returns {Buffer} Computed HKDF value.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getPasswordAuthenticationKey&#39;,\n\t    value: function getPasswordAuthenticationKey(username, password, serverBValue, salt) {\n\t      if (serverBValue.mod(this.N).equals(new _jsbn.BigInteger(&#39;0&#39;, 16))) {\n\t        throw new Error(&#39;B cannot be zero.&#39;);\n\t      }\n\t\n\t      this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\t\n\t      if (this.UValue.equals(new _jsbn.BigInteger(&#39;0&#39;, 16))) {\n\t        throw new Error(&#39;U cannot be zero.&#39;);\n\t      }\n\t\n\t      var usernamePassword = &#39;&#39; + this.poolName + username + &#39;:&#39; + password;\n\t      var usernamePasswordHash = this.hash(usernamePassword);\n\t\n\t      var xValue = new _jsbn.BigInteger(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n\t\n\t      var gModPowXN = this.g.modPow(xValue, this.N);\n\t      var intValue2 = serverBValue.subtract(this.k.multiply(gModPowXN));\n\t      var sValue = intValue2.modPow(this.smallAValue.add(this.UValue.multiply(xValue)), this.N).mod(this.N);\n\t\n\t      var hkdf = this.computehkdf(new _global.util.Buffer(this.padHex(sValue), &#39;hex&#39;), new _global.util.Buffer(this.padHex(this.UValue.toString(16)), &#39;hex&#39;));\n\t\n\t      return hkdf;\n\t    }\n\t\n\t    /**\n\t    * Return constant newPasswordRequiredChallengeUserAttributePrefix\n\t    * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n\t    */\n\t\n\t  }, {\n\t    key: &#39;getNewPasswordRequiredChallengeUserAttributePrefix&#39;,\n\t    value: function getNewPasswordRequiredChallengeUserAttributePrefix() {\n\t      return newPasswordRequiredChallengeUserAttributePrefix;\n\t    }\n\t\n\t    /**\n\t     * Converts a BigInteger (or hex string) to hex format padded with zeroes for hashing\n\t     * @param {BigInteger|String} bigInt Number or string to pad.\n\t     * @returns {String} Padded hex string.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;padHex&#39;,\n\t    value: function padHex(bigInt) {\n\t      var hashStr = bigInt.toString(16);\n\t      if (hashStr.length % 2 === 1) {\n\t        hashStr = &#39;0&#39; + hashStr;\n\t      } else if (&#39;89ABCDEFabcdef&#39;.indexOf(hashStr[0]) !== -1) {\n\t        hashStr = &#39;00&#39; + hashStr;\n\t      }\n\t      return hashStr;\n\t    }\n\t  }]);\n\t\n\t  return AuthenticationHelper;\n\t}();\n\t\n\texports.default = AuthenticationHelper;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \&quot;License\&quot;).\n\tou may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\tor in the \&quot;license\&quot; file accompanying this file. This file is\n\tdistributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _global = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/** @class */\n\tvar CognitoAccessToken = function () {\n\t  /**\n\t   * Constructs a new CognitoAccessToken object\n\t   * @param {string=} AccessToken The JWT access token.\n\t   */\n\t  function CognitoAccessToken() {\n\t    var _ref = arguments.length &gt; 0 &amp;&amp; arguments[0] !== undefined ? arguments[0] : {},\n\t        AccessToken = _ref.AccessToken;\n\t\n\t    _classCallCheck(this, CognitoAccessToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = AccessToken || &#39;&#39;;\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record&#39;s token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoAccessToken, [{\n\t    key: &#39;getJwtToken&#39;,\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token&#39;s expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getExpiration&#39;,\n\t    value: function getExpiration() {\n\t      var payload = this.jwtToken.split(&#39;.&#39;)[1];\n\t      var expiration = JSON.parse(_global.util.base64.decode(payload).toString(&#39;utf8&#39;));\n\t      return expiration.exp;\n\t    }\n\t  }]);\n\t\n\t  return CognitoAccessToken;\n\t}();\n\t\n\texports.default = CognitoAccessToken;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Inc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \&quot;License\&quot;).\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * You may not use this file except in compliance with the\n\ticense. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\tor in the \&quot;license\&quot; file accompanying this file. This file is\n\tdistributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _global = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/** @class */\n\tvar CognitoIdToken = function () {\n\t  /**\n\t   * Constructs a new CognitoIdToken object\n\t   * @param {string=} IdToken The JWT Id token\n\t   */\n\t  function CognitoIdToken() {\n\t    var _ref = arguments.length &gt; 0 &amp;&amp; arguments[0] !== undefined ? arguments[0] : {},\n\t        IdToken = _ref.IdToken;\n\t\n\t    _classCallCheck(this, CognitoIdToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = IdToken || &#39;&#39;;\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record&#39;s token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoIdToken, [{\n\t    key: &#39;getJwtToken&#39;,\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token&#39;s expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getExpiration&#39;,\n\t    value: function getExpiration() {\n\t      var payload = this.jwtToken.split(&#39;.&#39;)[1];\n\t      var expiration = JSON.parse(_global.util.base64.decode(payload).toString(&#39;utf8&#39;));\n\t      return expiration.exp;\n\t    }\n\t  }]);\n\t\n\t  return CognitoIdToken;\n\t}();\n\t\n\texports.default = CognitoIdToken;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \&quot;license\&quot; file accompanying this file. This file is\n\t * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoRefreshToken = function () {\n\t  /**\n\t   * Constructs a new CognitoRefreshToken object\n\t   * @param {string=} RefreshToken The JWT refresh token.\n\t   */\n\t  function CognitoRefreshToken() {\n\t    var _ref = arguments.length &gt; 0 &amp;&amp; arguments[0] !== undefined ? arguments[0] : {},\n\t        RefreshToken = _ref.RefreshToken;\n\t\n\t    _classCallCheck(this, CognitoRefreshToken);\n\t\n\t    // Assign object\n\t    this.token = RefreshToken || &#39;&#39;;\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record&#39;s token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoRefreshToken, [{\n\t    key: &#39;getToken&#39;,\n\t    value: function getToken() {\n\t      return this.token;\n\t    }\n\t  }]);\n\t\n\t  return CognitoRefreshToken;\n\t}();\n\t\n\texports.default = CognitoRefreshToken;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\tnc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Amazon Software License (the \&quot;License\&quot;).\n\tou may not use this file except in compliance with the\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * License. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\tor in the \&quot;license\&quot; file accompanying this file. This file is\n\tdistributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * for the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _jsbn = __webpack_require__(12);\n\t\n\tvar _AuthenticationHelper = __webpack_require__(2);\n\t\n\tvar _AuthenticationHelper2 = _interopRequireDefault(_AuthenticationHelper);\n\t\n\tvar _CognitoAccessToken = __webpack_require__(3);\n\t\n\tvar _CognitoAccessToken2 = _interopRequireDefault(_CognitoAccessToken);\n\t\n\tvar _CognitoIdToken = __webpack_require__(4);\n\t\n\tvar _CognitoIdToken2 = _interopRequireDefault(_CognitoIdToken);\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(5);\n\t\n\tvar _CognitoRefreshToken2 = _interopRequireDefault(_CognitoRefreshToken);\n\t\n\tvar _CognitoUserSession = __webpack_require__(8);\n\t\n\tvar _CognitoUserSession2 = _interopRequireDefault(_CognitoUserSession);\n\t\n\tvar _DateHelper = __webpack_require__(9);\n\t\n\tvar _DateHelper2 = _interopRequireDefault(_DateHelper);\n\t\n\tvar _CognitoUserAttribute = __webpack_require__(7);\n\t\n\tvar _CognitoUserAttribute2 = _interopRequireDefault(_CognitoUserAttribute);\n\t\n\tvar _StorageHelper = __webpack_require__(10);\n\t\n\tvar _StorageHelper2 = _interopRequireDefault(_StorageHelper);\n\t\n\tfunction _interopRequireDefault(obj) { return obj &amp;&amp; obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/**\n\t * @callback nodeCallback\n\t * @template T result\n\t * @param {*} err The operation failure reason, or null.\n\t * @param {T} result The operation result.\n\t */\n\t\n\t/**\n\t * @callback onFailure\n\t * @param {*} err Failure reason.\n\t */\n\t\n\t/**\n\t * @callback onSuccess\n\t * @template T result\n\t * @param {T} result The operation result.\n\t */\n\t\n\t/**\n\t * @callback mfaRequired\n\t * @param {*} details MFA challenge details.\n\t */\n\t\n\t/**\n\t * @callback customChallenge\n\t * @param {*} details Custom challenge details.\n\t */\n\t\n\t/**\n\t * @callback inputVerificationCode\n\t * @param {*} data Server response.\n\t */\n\t\n\t/**\n\t * @callback authSuccess\n\t * @param {CognitoUserSession} session The new session.\n\t * @param {bool=} userConfirmationNecessary User must be confirmed.\n\t */\n\t\n\t/** @class */\n\tvar CognitoUser = function () {\n\t  /**\n\t   * Constructs a new CognitoUser object\n\t   * @param {object} data Creation options\n\t   * @param {string} data.Username The user&#39;s username.\n\t   * @param {CognitoUserPool} data.Pool Pool containing the user.\n\t   */\n\t  function CognitoUser(data) {\n\t    _classCallCheck(this, CognitoUser);\n\t\n\t    if (data == null || data.Username == null || data.Pool == null) {\n\t      throw new Error(&#39;Username and pool information are required.&#39;);\n\t    }\n\t\n\t    this.username = data.Username || &#39;&#39;;\n\t    this.pool = data.Pool;\n\t    this.Session = null;\n\t\n\t    this.client = data.Pool.client;\n\t\n\t    this.signInUserSession = null;\n\t    this.authenticationFlowType = &#39;USER_SRP_AUTH&#39;;\n\t\n\t    this.storage = new _StorageHelper2.default().getStorage();\n\t  }\n\t\n\t  /**\n\t   * @returns {CognitoUserSession} the current session for this user\n\t   */\n\t\n\t\n\t  _createClass(CognitoUser, [{\n\t    key: &#39;getSignInUserSession&#39;,\n\t    value: function getSignInUserSession() {\n\t      return this.signInUserSession;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the user&#39;s username\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getUsername&#39;,\n\t    value: function getUsername() {\n\t      return this.username;\n\t    }\n\t\n\t    /**\n\t     * @returns {String} the authentication flow type\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getAuthenticationFlowType&#39;,\n\t    value: function getAuthenticationFlowType() {\n\t      return this.authenticationFlowType;\n\t    }\n\t\n\t    /**\n\t     * sets authentication flow type\n\t     * @param {string} authenticationFlowType New value.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;setAuthenticationFlowType&#39;,\n\t    value: function setAuthenticationFlowType(authenticationFlowType) {\n\t      this.authenticationFlowType = authenticationFlowType;\n\t    }\n\t\n\t    /**\n\t     * This is used for authenticating the user. it calls the AuthenticationHelper for SRP related\n\t     * stuff\n\t     * @param {AuthenticationDetails} authDetails Contains the authentication data\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {newPasswordRequired} callback.newPasswordRequired new\n\t     *        password and any required attributes are required to continue\n\t     * @param {mfaRequired} callback.mfaRequired MFA code\n\t     *        required to continue.\n\t     * @param {customChallenge} callback.customChallenge Custom challenge\n\t     *        response required to continue.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;authenticateUser&#39;,\n\t    value: function authenticateUser(authDetails, callback) {\n\t      var _this = this;\n\t\n\t      var authenticationHelper = new _AuthenticationHelper2.default(this.pool.getUserPoolId().split(&#39;_&#39;)[1]);\n\t      var dateHelper = new _DateHelper2.default();\n\t\n\t      var serverBValue = void 0;\n\t      var salt = void 0;\n\t      var authParameters = {};\n\t\n\t      if (this.deviceKey != null) {\n\t        authParameters.DEVICE_KEY = this.deviceKey;\n\t      }\n\t\n\t      authParameters.USERNAME = this.username;\n\t      authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\t\n\t      if (this.authenticationFlowType === &#39;CUSTOM_AUTH&#39;) {\n\t        authParameters.CHALLENGE_NAME = &#39;SRP_A&#39;;\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;initiateAuth&#39;, {\n\t        AuthFlow: this.authenticationFlowType,\n\t        ClientId: this.pool.getClientId(),\n\t        AuthParameters: authParameters,\n\t        ClientMetadata: authDetails.getValidationData()\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeParameters = data.ChallengeParameters;\n\t\n\t        _this.username = challengeParameters.USER_ID_FOR_SRP;\n\t        serverBValue = new _jsbn.BigInteger(challengeParameters.SRP_B, 16);\n\t        salt = new _jsbn.BigInteger(challengeParameters.SALT, 16);\n\t        _this.getCachedDeviceKeyAndPassword();\n\t\n\t        var hkdf = authenticationHelper.getPasswordAuthenticationKey(_this.username, authDetails.getPassword(), serverBValue, salt);\n\t\n\t        var dateNow = dateHelper.getNowString();\n\t\n\t        var signatureString = _global.util.crypto.hmac(hkdf, _global.util.buffer.concat([new _global.util.Buffer(_this.pool.getUserPoolId().split(&#39;_&#39;)[1], &#39;utf8&#39;), new _global.util.Buffer(_this.username, &#39;utf8&#39;), new _global.util.Buffer(challengeParameters.SECRET_BLOCK, &#39;base64&#39;), new _global.util.Buffer(dateNow, &#39;utf8&#39;)]), &#39;base64&#39;, &#39;sha256&#39;);\n\t\n\t        var challengeResponses = {};\n\t\n\t        challengeResponses.USERNAME = _this.username;\n\t        challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n\t        challengeResponses.TIMESTAMP = dateNow;\n\t        challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\t\n\t        if (_this.deviceKey != null) {\n\t          challengeResponses.DEVICE_KEY = _this.deviceKey;\n\t        }\n\t\n\t        var respondToAuthChallenge = function respondToAuthChallenge(challenge, challengeCallback) {\n\t          return _this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, challenge, function (errChallenge, dataChallenge) {\n\t            if (errChallenge &amp;&amp; errChallenge.code === &#39;ResourceNotFoundException&#39; &amp;&amp; errChallenge.message.toLowerCase().indexOf(&#39;device&#39;) !== -1) {\n\t              challengeResponses.DEVICE_KEY = null;\n\t              _this.deviceKey = null;\n\t              _this.randomPassword = null;\n\t              _this.deviceGroupKey = null;\n\t              _this.clearCachedDeviceKeyAndPassword();\n\t              return respondToAuthChallenge(challenge, challengeCallback);\n\t            }\n\t            return challengeCallback(errChallenge, dataChallenge);\n\t          });\n\t        };\n\t\n\t        respondToAuthChallenge({\n\t          ChallengeName: &#39;PASSWORD_VERIFIER&#39;,\n\t          ClientId: _this.pool.getClientId(),\n\t          ChallengeResponses: challengeResponses,\n\t          Session: data.Session\n\t        }, function (errAuthenticate, dataAuthenticate) {\n\t          if (errAuthenticate) {\n\t            return callback.onFailure(errAuthenticate);\n\t          }\n\t\n\t          var challengeName = dataAuthenticate.ChallengeName;\n\t          if (challengeName === &#39;NEW_PASSWORD_REQUIRED&#39;) {\n\t            _this.Session = dataAuthenticate.Session;\n\t            var userAttributes = null;\n\t            var rawRequiredAttributes = null;\n\t            var requiredAttributes = [];\n\t            var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\t\n\t            if (dataAuthenticate.ChallengeParameters) {\n\t              userAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.userAttributes);\n\t              rawRequiredAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.requiredAttributes);\n\t            }\n\t\n\t            if (rawRequiredAttributes) {\n\t              for (var i = 0; i &lt; rawRequiredAttributes.length; i++) {\n\t                requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n\t              }\n\t            }\n\t            return callback.newPasswordRequired(userAttributes, requiredAttributes);\n\t          }\n\t          return _this.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n\t        });\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t    * PRIVATE ONLY: This is an internal only method and should not\n\t    * be directly called by the consumers.\n\t    * @param {object} dataAuthenticate authentication data\n\t    * @param {object} authenticationHelper helper created\n\t    * @param {callback} callback passed on from caller\n\t    * @returns {void}\n\t    */\n\t\n\t  }, {\n\t    key: &#39;authenticateUserInternal&#39;,\n\t    value: function authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n\t      var _this2 = this;\n\t\n\t      var challengeName = dataAuthenticate.ChallengeName;\n\t      var challengeParameters = dataAuthenticate.ChallengeParameters;\n\t\n\t      if (challengeName === &#39;SMS_MFA&#39;) {\n\t        this.Session = dataAuthenticate.Session;\n\t        return callback.mfaRequired(challengeName, challengeParameters);\n\t      }\n\t\n\t      if (challengeName === &#39;CUSTOM_CHALLENGE&#39;) {\n\t        this.Session = dataAuthenticate.Session;\n\t        return callback.customChallenge(challengeParameters);\n\t      }\n\t\n\t      if (challengeName === &#39;DEVICE_SRP_AUTH&#39;) {\n\t        this.getDeviceResponse(callback);\n\t        return undefined;\n\t      }\n\t\n\t      this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\t      this.cacheTokens();\n\t\n\t      var newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n\t      if (newDeviceMetadata == null) {\n\t        return callback.onSuccess(this.signInUserSession);\n\t      }\n\t\n\t      authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\t\n\t      var deviceSecretVerifierConfig = {\n\t        Salt: new _global.util.Buffer(authenticationHelper.getSaltDevices(), &#39;hex&#39;).toString(&#39;base64&#39;),\n\t        PasswordVerifier: new _global.util.Buffer(authenticationHelper.getVerifierDevices(), &#39;hex&#39;).toString(&#39;base64&#39;)\n\t      };\n\t\n\t      this.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n\t      this.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n\t      this.randomPassword = authenticationHelper.getRandomPassword();\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;confirmDevice&#39;, {\n\t        DeviceKey: newDeviceMetadata.DeviceKey,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n\t        DeviceName: navigator.userAgent\n\t      }, function (errConfirm, dataConfirm) {\n\t        if (errConfirm) {\n\t          return callback.onFailure(errConfirm);\n\t        }\n\t\n\t        _this2.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\t        _this2.cacheDeviceKeyAndPassword();\n\t        if (dataConfirm.UserConfirmationNecessary === true) {\n\t          return callback.onSuccess(_this2.signInUserSession, dataConfirm.UserConfirmationNecessary);\n\t        }\n\t        return callback.onSuccess(_this2.signInUserSession);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t    * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n\t    * Pass the new password with any new user attributes to be updated.\n\t    * User attribute keys must be of format userAttributes.&lt;attribute_name&gt;.\n\t    * @param {string} newPassword new password for this user\n\t    * @param {object} requiredAttributeData map with values for all required attributes\n\t    * @param {object} callback Result callback map.\n\t    * @param {onFailure} callback.onFailure Called on any error.\n\t    * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n\t    * @param {customChallenge} callback.customChallenge Custom challenge\n\t    *         response required to continue.\n\t    * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t    * @returns {void}\n\t    */\n\t\n\t  }, {\n\t    key: &#39;completeNewPasswordChallenge&#39;,\n\t    value: function completeNewPasswordChallenge(newPassword, requiredAttributeData, callback) {\n\t      var _this3 = this;\n\t\n\t      if (!newPassword) {\n\t        return callback.onFailure(new Error(&#39;New password is required.&#39;));\n\t      }\n\t      var authenticationHelper = new _AuthenticationHelper2.default(this.pool.getUserPoolId().split(&#39;_&#39;)[1]);\n\t      var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\t\n\t      var finalUserAttributes = {};\n\t      if (requiredAttributeData) {\n\t        Object.keys(requiredAttributeData).forEach(function (key) {\n\t          finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n\t        });\n\t      }\n\t\n\t      finalUserAttributes.NEW_PASSWORD = newPassword;\n\t      finalUserAttributes.USERNAME = this.username;\n\t      this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n\t        ChallengeName: &#39;NEW_PASSWORD_REQUIRED&#39;,\n\t        ClientId: this.pool.getClientId(),\n\t        ChallengeResponses: finalUserAttributes,\n\t        Session: this.Session\n\t      }, function (errAuthenticate, dataAuthenticate) {\n\t        if (errAuthenticate) {\n\t          return callback.onFailure(errAuthenticate);\n\t        }\n\t        return _this3.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to get a session using device authentication. It is called at the end of user\n\t     * authentication\n\t     *\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getDeviceResponse&#39;,\n\t    value: function getDeviceResponse(callback) {\n\t      var _this4 = this;\n\t\n\t      var authenticationHelper = new _AuthenticationHelper2.default(this.deviceGroupKey);\n\t      var dateHelper = new _DateHelper2.default();\n\t\n\t      var authParameters = {};\n\t\n\t      authParameters.USERNAME = this.username;\n\t      authParameters.DEVICE_KEY = this.deviceKey;\n\t      authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n\t        ChallengeName: &#39;DEVICE_SRP_AUTH&#39;,\n\t        ClientId: this.pool.getClientId(),\n\t        ChallengeResponses: authParameters\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeParameters = data.ChallengeParameters;\n\t\n\t        var serverBValue = new _jsbn.BigInteger(challengeParameters.SRP_B, 16);\n\t        var salt = new _jsbn.BigInteger(challengeParameters.SALT, 16);\n\t\n\t        var hkdf = authenticationHelper.getPasswordAuthenticationKey(_this4.deviceKey, _this4.randomPassword, serverBValue, salt);\n\t\n\t        var dateNow = dateHelper.getNowString();\n\t\n\t        var signatureString = _global.util.crypto.hmac(hkdf, _global.util.buffer.concat([new _global.util.Buffer(_this4.deviceGroupKey, &#39;utf8&#39;), new _global.util.Buffer(_this4.deviceKey, &#39;utf8&#39;), new _global.util.Buffer(challengeParameters.SECRET_BLOCK, &#39;base64&#39;), new _global.util.Buffer(dateNow, &#39;utf8&#39;)]), &#39;base64&#39;, &#39;sha256&#39;);\n\t\n\t        var challengeResponses = {};\n\t\n\t        challengeResponses.USERNAME = _this4.username;\n\t        challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n\t        challengeResponses.TIMESTAMP = dateNow;\n\t        challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\t        challengeResponses.DEVICE_KEY = _this4.deviceKey;\n\t\n\t        _this4.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n\t          ChallengeName: &#39;DEVICE_PASSWORD_VERIFIER&#39;,\n\t          ClientId: _this4.pool.getClientId(),\n\t          ChallengeResponses: challengeResponses,\n\t          Session: data.Session\n\t        }, function (errAuthenticate, dataAuthenticate) {\n\t          if (errAuthenticate) {\n\t            return callback.onFailure(errAuthenticate);\n\t          }\n\t\n\t          _this4.signInUserSession = _this4.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\t          _this4.cacheTokens();\n\t\n\t          return callback.onSuccess(_this4.signInUserSession);\n\t        });\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used for a certain user to confirm the registration by using a confirmation code\n\t     * @param {string} confirmationCode Code entered by user.\n\t     * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n\t     * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;confirmRegistration&#39;,\n\t    value: function confirmRegistration(confirmationCode, forceAliasCreation, callback) {\n\t      this.client.makeUnauthenticatedRequest(&#39;confirmSignUp&#39;, {\n\t        ClientId: this.pool.getClientId(),\n\t        ConfirmationCode: confirmationCode,\n\t        Username: this.username,\n\t        ForceAliasCreation: forceAliasCreation\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, &#39;SUCCESS&#39;);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used by the user once he has the responses to a custom challenge\n\t     * @param {string} answerChallenge The custom challange answer.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {customChallenge} callback.customChallenge\n\t     *    Custom challenge response required to continue.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;sendCustomChallengeAnswer&#39;,\n\t    value: function sendCustomChallengeAnswer(answerChallenge, callback) {\n\t      var _this5 = this;\n\t\n\t      var challengeResponses = {};\n\t      challengeResponses.USERNAME = this.username;\n\t      challengeResponses.ANSWER = answerChallenge;\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n\t        ChallengeName: &#39;CUSTOM_CHALLENGE&#39;,\n\t        ChallengeResponses: challengeResponses,\n\t        ClientId: this.pool.getClientId(),\n\t        Session: this.Session\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeName = data.ChallengeName;\n\t\n\t        if (challengeName === &#39;CUSTOM_CHALLENGE&#39;) {\n\t          _this5.Session = data.Session;\n\t          return callback.customChallenge(data.ChallengeParameters);\n\t        }\n\t\n\t        _this5.signInUserSession = _this5.getCognitoUserSession(data.AuthenticationResult);\n\t        _this5.cacheTokens();\n\t        return callback.onSuccess(_this5.signInUserSession);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used by the user once he has an MFA code\n\t     * @param {string} confirmationCode The MFA code entered by the user.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {authSuccess} callback.onSuccess Called on success with the new session.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;sendMFACode&#39;,\n\t    value: function sendMFACode(confirmationCode, callback) {\n\t      var _this6 = this;\n\t\n\t      var challengeResponses = {};\n\t      challengeResponses.USERNAME = this.username;\n\t      challengeResponses.SMS_MFA_CODE = confirmationCode;\n\t\n\t      if (this.deviceKey != null) {\n\t        challengeResponses.DEVICE_KEY = this.deviceKey;\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n\t        ChallengeName: &#39;SMS_MFA&#39;,\n\t        ChallengeResponses: challengeResponses,\n\t        ClientId: this.pool.getClientId(),\n\t        Session: this.Session\n\t      }, function (err, dataAuthenticate) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t\n\t        var challengeName = dataAuthenticate.ChallengeName;\n\t\n\t        if (challengeName === &#39;DEVICE_SRP_AUTH&#39;) {\n\t          _this6.getDeviceResponse(callback);\n\t          return undefined;\n\t        }\n\t\n\t        _this6.signInUserSession = _this6.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\t        _this6.cacheTokens();\n\t\n\t        if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n\t          return callback.onSuccess(_this6.signInUserSession);\n\t        }\n\t\n\t        var authenticationHelper = new _AuthenticationHelper2.default(_this6.pool.getUserPoolId().split(&#39;_&#39;)[1]);\n\t        authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\t\n\t        var deviceSecretVerifierConfig = {\n\t          Salt: new _global.util.Buffer(authenticationHelper.getSaltDevices(), &#39;hex&#39;).toString(&#39;base64&#39;),\n\t          PasswordVerifier: new _global.util.Buffer(authenticationHelper.getVerifierDevices(), &#39;hex&#39;).toString(&#39;base64&#39;)\n\t        };\n\t\n\t        _this6.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n\t        _this6.deviceGroupKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey;\n\t        _this6.randomPassword = authenticationHelper.getRandomPassword();\n\t\n\t        _this6.client.makeUnauthenticatedRequest(&#39;confirmDevice&#39;, {\n\t          DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n\t          AccessToken: _this6.signInUserSession.getAccessToken().getJwtToken(),\n\t          DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n\t          DeviceName: navigator.userAgent\n\t        }, function (errConfirm, dataConfirm) {\n\t          if (errConfirm) {\n\t            return callback.onFailure(errConfirm);\n\t          }\n\t\n\t          _this6.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\t          _this6.cacheDeviceKeyAndPassword();\n\t          if (dataConfirm.UserConfirmationNecessary === true) {\n\t            return callback.onSuccess(_this6.signInUserSession, dataConfirm.UserConfirmationNecessary);\n\t          }\n\t          return callback.onSuccess(_this6.signInUserSession);\n\t        });\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to change the current password\n\t     * @param {string} oldUserPassword The current password.\n\t     * @param {string} newUserPassword The requested new password.\n\t     * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;changePassword&#39;,\n\t    value: function changePassword(oldUserPassword, newUserPassword, callback) {\n\t      if (!(this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid())) {\n\t        return callback(new Error(&#39;User is not authenticated&#39;), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;changePassword&#39;, {\n\t        PreviousPassword: oldUserPassword,\n\t        ProposedPassword: newUserPassword,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, &#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to enable MFA for himself\n\t     * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;enableMFA&#39;,\n\t    value: function enableMFA(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error(&#39;User is not authenticated&#39;), null);\n\t      }\n\t\n\t      var mfaOptions = [];\n\t      var mfaEnabled = {\n\t        DeliveryMedium: &#39;SMS&#39;,\n\t        AttributeName: &#39;phone_number&#39;\n\t      };\n\t      mfaOptions.push(mfaEnabled);\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;setUserSettings&#39;, {\n\t        MFAOptions: mfaOptions,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, &#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to disable MFA for himself\n\t     * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;disableMFA&#39;,\n\t    value: function disableMFA(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error(&#39;User is not authenticated&#39;), null);\n\t      }\n\t\n\t      var mfaOptions = [];\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;setUserSettings&#39;, {\n\t        MFAOptions: mfaOptions,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, &#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to delete himself\n\t     * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;deleteUser&#39;,\n\t    value: function deleteUser(callback) {\n\t      var _this7 = this;\n\t\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error(&#39;User is not authenticated&#39;), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;deleteUser&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        _this7.clearCachedTokens();\n\t        return callback(null, &#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n\t     */\n\t    /**\n\t     * This is used by an authenticated user to change a list of attributes\n\t     * @param {AttributeArg[]} attributes A list of the new user attributes.\n\t     * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;updateAttributes&#39;,\n\t    value: function updateAttributes(attributes, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback(new Error(&#39;User is not authenticated&#39;), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;updateUserAttributes&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        UserAttributes: attributes\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, &#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to get a list of attributes\n\t     * @param {nodeCallback&lt;CognitoUserAttribute[]&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getUserAttributes&#39;,\n\t    value: function getUserAttributes(callback) {\n\t      if (!(this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid())) {\n\t        return callback(new Error(&#39;User is not authenticated&#39;), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;getUser&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err, userData) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t\n\t        var attributeList = [];\n\t\n\t        for (var i = 0; i &lt; userData.UserAttributes.length; i++) {\n\t          var attribute = {\n\t            Name: userData.UserAttributes[i].Name,\n\t            Value: userData.UserAttributes[i].Value\n\t          };\n\t          var userAttribute = new _CognitoUserAttribute2.default(attribute);\n\t          attributeList.push(userAttribute);\n\t        }\n\t\n\t        return callback(null, attributeList);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to get the MFAOptions\n\t     * @param {nodeCallback&lt;MFAOptions&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getMFAOptions&#39;,\n\t    value: function getMFAOptions(callback) {\n\t      if (!(this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid())) {\n\t        return callback(new Error(&#39;User is not authenticated&#39;), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;getUser&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err, userData) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t\n\t        return callback(null, userData.MFAOptions);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by an authenticated user to delete a list of attributes\n\t     * @param {string[]} attributeList Names of the attributes to delete.\n\t     * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;deleteAttributes&#39;,\n\t    value: function deleteAttributes(attributeList, callback) {\n\t      if (!(this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid())) {\n\t        return callback(new Error(&#39;User is not authenticated&#39;), null);\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;deleteUserAttributes&#39;, {\n\t        UserAttributeNames: attributeList,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, &#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used by a user to resend a confirmation code\n\t     * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;resendConfirmationCode&#39;,\n\t    value: function resendConfirmationCode(callback) {\n\t      this.client.makeUnauthenticatedRequest(&#39;resendConfirmationCode&#39;, {\n\t        ClientId: this.pool.getClientId(),\n\t        Username: this.username\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t        return callback(null, &#39;SUCCESS&#39;);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to get a session, either from the session object\n\t     * or from  the local storage, or by using a refresh token\n\t     *\n\t     * @param {nodeCallback&lt;CognitoUserSession&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getSession&#39;,\n\t    value: function getSession(callback) {\n\t      if (this.username == null) {\n\t        return callback(new Error(&#39;Username is null. Cannot retrieve a new session&#39;), null);\n\t      }\n\t\n\t      if (this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid()) {\n\t        return callback(null, this.signInUserSession);\n\t      }\n\t\n\t      var keyPrefix = &#39;CognitoIdentityServiceProvider.&#39; + this.pool.getClientId() + &#39;.&#39; + this.username;\n\t      var idTokenKey = keyPrefix + &#39;.idToken&#39;;\n\t      var accessTokenKey = keyPrefix + &#39;.accessToken&#39;;\n\t      var refreshTokenKey = keyPrefix + &#39;.refreshToken&#39;;\n\t\n\t      if (this.storage.getItem(idTokenKey)) {\n\t        var idToken = new _CognitoIdToken2.default({\n\t          IdToken: this.storage.getItem(idTokenKey)\n\t        });\n\t        var accessToken = new _CognitoAccessToken2.default({\n\t          AccessToken: this.storage.getItem(accessTokenKey)\n\t        });\n\t        var refreshToken = new _CognitoRefreshToken2.default({\n\t          RefreshToken: this.storage.getItem(refreshTokenKey)\n\t        });\n\t\n\t        var sessionData = {\n\t          IdToken: idToken,\n\t          AccessToken: accessToken,\n\t          RefreshToken: refreshToken\n\t        };\n\t        var cachedSession = new _CognitoUserSession2.default(sessionData);\n\t        if (cachedSession.isValid()) {\n\t          this.signInUserSession = cachedSession;\n\t          return callback(null, this.signInUserSession);\n\t        }\n\t\n\t        if (refreshToken.getToken() == null) {\n\t          return callback(new Error(&#39;Cannot retrieve a new session. Please authenticate.&#39;), null);\n\t        }\n\t\n\t        this.refreshSession(refreshToken, callback);\n\t      } else {\n\t        callback(new Error(&#39;Local storage is missing an ID Token, Please authenticate&#39;), null);\n\t      }\n\t\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This uses the refreshToken to retrieve a new session\n\t     * @param {CognitoRefreshToken} refreshToken A previous session&#39;s refresh token.\n\t     * @param {nodeCallback&lt;CognitoUserSession&gt;} callback Called on success or error.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;refreshSession&#39;,\n\t    value: function refreshSession(refreshToken, callback) {\n\t      var _this8 = this;\n\t\n\t      var authParameters = {};\n\t      authParameters.REFRESH_TOKEN = refreshToken.getToken();\n\t      var keyPrefix = &#39;CognitoIdentityServiceProvider.&#39; + this.pool.getClientId();\n\t      var lastUserKey = keyPrefix + &#39;.LastAuthUser&#39;;\n\t\n\t      if (this.storage.getItem(lastUserKey)) {\n\t        this.username = this.storage.getItem(lastUserKey);\n\t        var deviceKeyKey = keyPrefix + &#39;.&#39; + this.username + &#39;.deviceKey&#39;;\n\t        this.deviceKey = this.storage.getItem(deviceKeyKey);\n\t        authParameters.DEVICE_KEY = this.deviceKey;\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;initiateAuth&#39;, {\n\t        ClientId: this.pool.getClientId(),\n\t        AuthFlow: &#39;REFRESH_TOKEN_AUTH&#39;,\n\t        AuthParameters: authParameters\n\t      }, function (err, authResult) {\n\t        if (err) {\n\t          if (err.code === &#39;NotAuthorizedException&#39;) {\n\t            _this8.clearCachedTokens();\n\t          }\n\t          return callback(err, null);\n\t        }\n\t        if (authResult) {\n\t          var authenticationResult = authResult.AuthenticationResult;\n\t          if (!Object.prototype.hasOwnProperty.call(authenticationResult, &#39;RefreshToken&#39;)) {\n\t            authenticationResult.RefreshToken = refreshToken.getToken();\n\t          }\n\t          _this8.signInUserSession = _this8.getCognitoUserSession(authenticationResult);\n\t          _this8.cacheTokens();\n\t          return callback(null, _this8.signInUserSession);\n\t        }\n\t        return undefined;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to save the session tokens to local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;cacheTokens&#39;,\n\t    value: function cacheTokens() {\n\t      var keyPrefix = &#39;CognitoIdentityServiceProvider.&#39; + this.pool.getClientId();\n\t      var idTokenKey = keyPrefix + &#39;.&#39; + this.username + &#39;.idToken&#39;;\n\t      var accessTokenKey = keyPrefix + &#39;.&#39; + this.username + &#39;.accessToken&#39;;\n\t      var refreshTokenKey = keyPrefix + &#39;.&#39; + this.username + &#39;.refreshToken&#39;;\n\t      var lastUserKey = keyPrefix + &#39;.LastAuthUser&#39;;\n\t\n\t      this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n\t      this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n\t      this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n\t      this.storage.setItem(lastUserKey, this.username);\n\t    }\n\t\n\t    /**\n\t     * This is used to cache the device key and device group and device password\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;cacheDeviceKeyAndPassword&#39;,\n\t    value: function cacheDeviceKeyAndPassword() {\n\t      var keyPrefix = &#39;CognitoIdentityServiceProvider.&#39; + this.pool.getClientId() + &#39;.&#39; + this.username;\n\t      var deviceKeyKey = keyPrefix + &#39;.deviceKey&#39;;\n\t      var randomPasswordKey = keyPrefix + &#39;.randomPasswordKey&#39;;\n\t      var deviceGroupKeyKey = keyPrefix + &#39;.deviceGroupKey&#39;;\n\t\n\t      this.storage.setItem(deviceKeyKey, this.deviceKey);\n\t      this.storage.setItem(randomPasswordKey, this.randomPassword);\n\t      this.storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to get current device key and device group and device password\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getCachedDeviceKeyAndPassword&#39;,\n\t    value: function getCachedDeviceKeyAndPassword() {\n\t      var keyPrefix = &#39;CognitoIdentityServiceProvider.&#39; + this.pool.getClientId() + &#39;.&#39; + this.username;\n\t      var deviceKeyKey = keyPrefix + &#39;.deviceKey&#39;;\n\t      var randomPasswordKey = keyPrefix + &#39;.randomPasswordKey&#39;;\n\t      var deviceGroupKeyKey = keyPrefix + &#39;.deviceGroupKey&#39;;\n\t\n\t      if (this.storage.getItem(deviceKeyKey)) {\n\t        this.deviceKey = this.storage.getItem(deviceKeyKey);\n\t        this.randomPassword = this.storage.getItem(randomPasswordKey);\n\t        this.deviceGroupKey = this.storage.getItem(deviceGroupKeyKey);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the device key info from local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;clearCachedDeviceKeyAndPassword&#39;,\n\t    value: function clearCachedDeviceKeyAndPassword() {\n\t      var keyPrefix = &#39;CognitoIdentityServiceProvider.&#39; + this.pool.getClientId() + &#39;.&#39; + this.username;\n\t      var deviceKeyKey = keyPrefix + &#39;.deviceKey&#39;;\n\t      var randomPasswordKey = keyPrefix + &#39;.randomPasswordKey&#39;;\n\t      var deviceGroupKeyKey = keyPrefix + &#39;.deviceGroupKey&#39;;\n\t\n\t      this.storage.removeItem(deviceKeyKey);\n\t      this.storage.removeItem(randomPasswordKey);\n\t      this.storage.removeItem(deviceGroupKeyKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the session tokens from local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;clearCachedTokens&#39;,\n\t    value: function clearCachedTokens() {\n\t      var keyPrefix = &#39;CognitoIdentityServiceProvider.&#39; + this.pool.getClientId();\n\t      var idTokenKey = keyPrefix + &#39;.&#39; + this.username + &#39;.idToken&#39;;\n\t      var accessTokenKey = keyPrefix + &#39;.&#39; + this.username + &#39;.accessToken&#39;;\n\t      var refreshTokenKey = keyPrefix + &#39;.&#39; + this.username + &#39;.refreshToken&#39;;\n\t      var lastUserKey = keyPrefix + &#39;.LastAuthUser&#39;;\n\t\n\t      this.storage.removeItem(idTokenKey);\n\t      this.storage.removeItem(accessTokenKey);\n\t      this.storage.removeItem(refreshTokenKey);\n\t      this.storage.removeItem(lastUserKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to build a user session from tokens retrieved in the authentication result\n\t     * @param {object} authResult Successful auth response from server.\n\t     * @returns {CognitoUserSession} The new user session.\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getCognitoUserSession&#39;,\n\t    value: function getCognitoUserSession(authResult) {\n\t      var idToken = new _CognitoIdToken2.default(authResult);\n\t      var accessToken = new _CognitoAccessToken2.default(authResult);\n\t      var refreshToken = new _CognitoRefreshToken2.default(authResult);\n\t\n\t      var sessionData = {\n\t        IdToken: idToken,\n\t        AccessToken: accessToken,\n\t        RefreshToken: refreshToken\n\t      };\n\t\n\t      return new _CognitoUserSession2.default(sessionData);\n\t    }\n\t\n\t    /**\n\t     * This is used to initiate a forgot password request\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {inputVerificationCode?} callback.inputVerificationCode\n\t     *    Optional callback raised instead of onSuccess with response data.\n\t     * @param {onSuccess&lt;void&gt;?} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;forgotPassword&#39;,\n\t    value: function forgotPassword(callback) {\n\t      this.client.makeUnauthenticatedRequest(&#39;forgotPassword&#39;, {\n\t        ClientId: this.pool.getClientId(),\n\t        Username: this.username\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        if (typeof callback.inputVerificationCode === &#39;function&#39;) {\n\t          return callback.inputVerificationCode(data);\n\t        }\n\t        return callback.onSuccess();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to confirm a new password using a confirmationCode\n\t     * @param {string} confirmationCode Code entered by user.\n\t     * @param {string} newPassword Confirm new password.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess&lt;void&gt;} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;confirmPassword&#39;,\n\t    value: function confirmPassword(confirmationCode, newPassword, callback) {\n\t      this.client.makeUnauthenticatedRequest(&#39;confirmForgotPassword&#39;, {\n\t        ClientId: this.pool.getClientId(),\n\t        Username: this.username,\n\t        ConfirmationCode: confirmationCode,\n\t        Password: newPassword\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to initiate an attribute confirmation request\n\t     * @param {string} attributeName User attribute that needs confirmation.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getAttributeVerificationCode&#39;,\n\t    value: function getAttributeVerificationCode(attributeName, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;getUserAttributeVerificationCode&#39;, {\n\t        AttributeName: attributeName,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.inputVerificationCode(data);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to confirm an attribute using a confirmation code\n\t     * @param {string} attributeName Attribute being confirmed.\n\t     * @param {string} confirmationCode Code entered by user.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;verifyAttribute&#39;,\n\t    value: function verifyAttribute(attributeName, confirmationCode, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;verifyUserAttribute&#39;, {\n\t        AttributeName: attributeName,\n\t        Code: confirmationCode,\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(&#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to get the device information using the current device key\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess&lt;*&gt;} callback.onSuccess Called on success with device data.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getDevice&#39;,\n\t    value: function getDevice(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;getDevice&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(data);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to forget a specific device\n\t     * @param {string} deviceKey Device key.\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;forgetSpecificDevice&#39;,\n\t    value: function forgetSpecificDevice(deviceKey, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;forgetDevice&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: deviceKey\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(&#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to forget the current device\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;forgetDevice&#39;,\n\t    value: function forgetDevice(callback) {\n\t      var _this9 = this;\n\t\n\t      this.forgetSpecificDevice(this.deviceKey, {\n\t        onFailure: callback.onFailure,\n\t        onSuccess: function onSuccess(result) {\n\t          _this9.deviceKey = null;\n\t          _this9.deviceGroupKey = null;\n\t          _this9.randomPassword = null;\n\t          _this9.clearCachedDeviceKeyAndPassword();\n\t          return callback.onSuccess(result);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to set the device status as remembered\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;setDeviceStatusRemembered&#39;,\n\t    value: function setDeviceStatusRemembered(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;updateDeviceStatus&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey,\n\t        DeviceRememberedStatus: &#39;remembered&#39;\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(&#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to set the device status as not remembered\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;setDeviceStatusNotRemembered&#39;,\n\t    value: function setDeviceStatusNotRemembered(callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;updateDeviceStatus&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        DeviceKey: this.deviceKey,\n\t        DeviceRememberedStatus: &#39;not_remembered&#39;\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(&#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to list all devices for a user\n\t     *\n\t     * @param {int} limit the number of devices returned in a call\n\t     * @param {string} paginationToken the pagination token in case any was returned before\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess&lt;*&gt;} callback.onSuccess Called on success with device list.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;listDevices&#39;,\n\t    value: function listDevices(limit, paginationToken, callback) {\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;listDevices&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n\t        Limit: limit,\n\t        PaginationToken: paginationToken\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        return callback.onSuccess(data);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to globally revoke all tokens issued to a user\n\t     * @param {object} callback Result callback map.\n\t     * @param {onFailure} callback.onFailure Called on any error.\n\t     * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;globalSignOut&#39;,\n\t    value: function globalSignOut(callback) {\n\t      var _this10 = this;\n\t\n\t      if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n\t        return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n\t      }\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;globalSignOut&#39;, {\n\t        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n\t      }, function (err) {\n\t        if (err) {\n\t          return callback.onFailure(err);\n\t        }\n\t        _this10.clearCachedTokens();\n\t        return callback.onSuccess(&#39;SUCCESS&#39;);\n\t      });\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used for the user to signOut of the application and clear the cached tokens.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;signOut&#39;,\n\t    value: function signOut() {\n\t      this.signInUserSession = null;\n\t      this.clearCachedTokens();\n\t    }\n\t  }]);\n\t\n\t  return CognitoUser;\n\t}();\n\t\n\texports.default = CognitoUser;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \&quot;license\&quot; file accompanying this file. This file is\n\t * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoUserAttribute = function () {\n\t  /**\n\t   * Constructs a new CognitoUserAttribute object\n\t   * @param {string=} Name The record&#39;s name\n\t   * @param {string=} Value The record&#39;s value\n\t   */\n\t  function CognitoUserAttribute() {\n\t    var _ref = arguments.length &gt; 0 &amp;&amp; arguments[0] !== undefined ? arguments[0] : {},\n\t        Name = _ref.Name,\n\t        Value = _ref.Value;\n\t\n\t    _classCallCheck(this, CognitoUserAttribute);\n\t\n\t    this.Name = Name || &#39;&#39;;\n\t    this.Value = Value || &#39;&#39;;\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record&#39;s value.\n\t   */\n\t\n\t\n\t  _createClass(CognitoUserAttribute, [{\n\t    key: &#39;getValue&#39;,\n\t    value: function getValue() {\n\t      return this.Value;\n\t    }\n\t\n\t    /**\n\t     * Sets the record&#39;s value.\n\t     * @param {string} value The new value.\n\t     * @returns {CognitoUserAttribute} The record for method chaining.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;setValue&#39;,\n\t    value: function setValue(value) {\n\t      this.Value = value;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the record&#39;s name.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getName&#39;,\n\t    value: function getName() {\n\t      return this.Name;\n\t    }\n\t\n\t    /**\n\t     * Sets the record&#39;s name\n\t     * @param {string} name The new name.\n\t     * @returns {CognitoUserAttribute} The record for method chaining.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;setName&#39;,\n\t    value: function setName(name) {\n\t      this.Name = name;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} a string representation of the record.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;toString&#39;,\n\t    value: function toString() {\n\t      return JSON.stringify(this);\n\t    }\n\t\n\t    /**\n\t     * @returns {object} a flat object representing the record.\n\t     */\n\t\n\t  }, {\n\t    key: &#39;toJSON&#39;,\n\t    value: function toJSON() {\n\t      return {\n\t        Name: this.Name,\n\t        Value: this.Value\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return CognitoUserAttribute;\n\t}();\n\t\n\texports.default = CognitoUserAttribute;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \&quot;license\&quot; file accompanying this file. This file is\n\t * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoUserSession = function () {\n\t  /**\n\t   * Constructs a new CognitoUserSession object\n\t   * @param {string} IdToken The session&#39;s Id token.\n\t   * @param {string=} RefreshToken The session&#39;s refresh token.\n\t   * @param {string} AccessToken The session&#39;s access token.\n\t   */\n\t  function CognitoUserSession() {\n\t    var _ref = arguments.length &gt; 0 &amp;&amp; arguments[0] !== undefined ? arguments[0] : {},\n\t        IdToken = _ref.IdToken,\n\t        RefreshToken = _ref.RefreshToken,\n\t        AccessToken = _ref.AccessToken;\n\t\n\t    _classCallCheck(this, CognitoUserSession);\n\t\n\t    if (AccessToken == null || IdToken == null) {\n\t      throw new Error(&#39;Id token and Access Token must be present.&#39;);\n\t    }\n\t\n\t    this.idToken = IdToken;\n\t    this.refreshToken = RefreshToken;\n\t    this.accessToken = AccessToken;\n\t  }\n\t\n\t  /**\n\t   * @returns {CognitoIdToken} the session&#39;s Id token\n\t   */\n\t\n\t\n\t  _createClass(CognitoUserSession, [{\n\t    key: &#39;getIdToken&#39;,\n\t    value: function getIdToken() {\n\t      return this.idToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoRefreshToken} the session&#39;s refresh token\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getRefreshToken&#39;,\n\t    value: function getRefreshToken() {\n\t      return this.refreshToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoAccessToken} the session&#39;s access token\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getAccessToken&#39;,\n\t    value: function getAccessToken() {\n\t      return this.accessToken;\n\t    }\n\t\n\t    /**\n\t     * Checks to see if the session is still valid based on session expiry information found\n\t     * in tokens and the current time\n\t     * @returns {boolean} if the session is still valid\n\t     */\n\t\n\t  }, {\n\t    key: &#39;isValid&#39;,\n\t    value: function isValid() {\n\t      var now = Math.floor(new Date() / 1000);\n\t\n\t      return now &lt; this.accessToken.getExpiration() &amp;&amp; now &lt; this.idToken.getExpiration();\n\t    }\n\t  }]);\n\t\n\t  return CognitoUserSession;\n\t}();\n\t\n\texports.default = CognitoUserSession;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \&quot;license\&quot; file accompanying this file. This file is\n\t * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar monthNames = [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;, &#39;May&#39;, &#39;Jun&#39;, &#39;Jul&#39;, &#39;Aug&#39;, &#39;Sep&#39;, &#39;Oct&#39;, &#39;Nov&#39;, &#39;Dec&#39;];\n\tvar weekNames = [&#39;Sun&#39;, &#39;Mon&#39;, &#39;Tue&#39;, &#39;Wed&#39;, &#39;Thu&#39;, &#39;Fri&#39;, &#39;Sat&#39;];\n\t\n\t/** @class */\n\t\n\tvar DateHelper = function () {\n\t  function DateHelper() {\n\t    _classCallCheck(this, DateHelper);\n\t  }\n\t\n\t  _createClass(DateHelper, [{\n\t    key: &#39;getNowString&#39;,\n\t\n\t    /**\n\t     * @returns {string} The current time in \&quot;ddd MMM D HH:mm:ss UTC YYYY\&quot; format.\n\t     */\n\t    value: function getNowString() {\n\t      var now = new Date();\n\t\n\t      var weekDay = weekNames[now.getUTCDay()];\n\t      var month = monthNames[now.getUTCMonth()];\n\t      var day = now.getUTCDate();\n\t\n\t      var hours = now.getUTCHours();\n\t      if (hours &lt; 10) {\n\t        hours = &#39;0&#39; + hours;\n\t      }\n\t\n\t      var minutes = now.getUTCMinutes();\n\t      if (minutes &lt; 10) {\n\t        minutes = &#39;0&#39; + minutes;\n\t      }\n\t\n\t      var seconds = now.getUTCSeconds();\n\t      if (seconds &lt; 10) {\n\t        seconds = &#39;0&#39; + seconds;\n\t      }\n\t\n\t      var year = now.getUTCFullYear();\n\t\n\t      // ddd MMM D HH:mm:ss UTC YYYY\n\t      var dateNow = weekDay + &#39; &#39; + month + &#39; &#39; + day + &#39; &#39; + hours + &#39;:&#39; + minutes + &#39;:&#39; + seconds + &#39; UTC &#39; + year;\n\t\n\t      return dateNow;\n\t    }\n\t  }]);\n\t\n\t  return DateHelper;\n\t}();\n\t\n\texports.default = DateHelper;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \&quot;license\&quot; file accompanying this file. This file is\n\t * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\tvar dataMemory = {};\n\t\n\t/** @class */\n\t\n\tvar MemoryStorage = function () {\n\t  function MemoryStorage() {\n\t    _classCallCheck(this, MemoryStorage);\n\t  }\n\t\n\t  _createClass(MemoryStorage, null, [{\n\t    key: &#39;setItem&#39;,\n\t\n\t\n\t    /**\n\t     * This is used to set a specific item in storage\n\t     * @param {string} key - the key for the item\n\t     * @param {object} value - the value\n\t     * @returns {string} value that was set\n\t     */\n\t    value: function setItem(key, value) {\n\t      dataMemory[key] = value;\n\t      return dataMemory[key];\n\t    }\n\t\n\t    /**\n\t     * This is used to get a specific key from storage\n\t     * @param {string} key - the key for the item\n\t     * This is used to clear the storage\n\t     * @returns {string} the data item\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getItem&#39;,\n\t    value: function getItem(key) {\n\t      return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to remove an item from storage\n\t     * @param {string} key - the key being set\n\t     * @returns {string} value - value that was deleted\n\t     */\n\t\n\t  }, {\n\t    key: &#39;removeItem&#39;,\n\t    value: function removeItem(key) {\n\t      return delete dataMemory[key];\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the storage\n\t     * @returns {string} nothing\n\t     */\n\t\n\t  }, {\n\t    key: &#39;clear&#39;,\n\t    value: function clear() {\n\t      dataMemory = {};\n\t      return dataMemory;\n\t    }\n\t  }]);\n\t\n\t  return MemoryStorage;\n\t}();\n\t\n\t/** @class */\n\t\n\t\n\tvar StorageHelper = function () {\n\t\n\t  /**\n\t   * This is used to get a storage object\n\t   * @returns {object} the storage\n\t   */\n\t  function StorageHelper() {\n\t    _classCallCheck(this, StorageHelper);\n\t\n\t    try {\n\t      this.storageWindow = window.localStorage;\n\t      this.storageWindow.setItem(&#39;aws.cognito.test-ls&#39;, 1);\n\t      this.storageWindow.removeItem(&#39;aws.cognito.test-ls&#39;);\n\t    } catch (exception) {\n\t      this.storageWindow = MemoryStorage;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * This is used to return the storage\n\t   * @returns {object} the storage\n\t   */\n\t\n\t\n\t  _createClass(StorageHelper, [{\n\t    key: &#39;getStorage&#39;,\n\t    value: function getStorage() {\n\t      return this.storageWindow;\n\t    }\n\t  }]);\n\t\n\t  return StorageHelper;\n\t}();\n\t\n\texports.default = StorageHelper;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\&quot;use strict\&quot;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/*!\n\t * Copyright 2016 Amazon.com,\n\t * Inc. or its affiliates. All Rights Reserved.\n\t *\n\t * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n\t * You may not use this file except in compliance with the\n\t * License. A copy of the License is located at\n\t *\n\t *     http://aws.amazon.com/asl/\n\t *\n\t * or in the \&quot;license\&quot; file accompanying this file. This file is\n\t * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\t * CONDITIONS OF ANY KIND, express or implied. See the License\n\t * for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar AuthenticationDetails = function () {\n\t  /**\n\t   * Constructs a new AuthenticationDetails object\n\t   * @param {object=} data Creation options.\n\t   * @param {string} data.Username User being authenticated.\n\t   * @param {string} data.Password Plain-text password to authenticate with.\n\t   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n\t   */\n\t  function AuthenticationDetails(data) {\n\t    _classCallCheck(this, AuthenticationDetails);\n\t\n\t    var _ref = data || {},\n\t        ValidationData = _ref.ValidationData,\n\t        Username = _ref.Username,\n\t        Password = _ref.Password;\n\t\n\t    this.validationData = ValidationData || [];\n\t    this.username = Username;\n\t    this.password = Password;\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record&#39;s username\n\t   */\n\t\n\t\n\t  _createClass(AuthenticationDetails, [{\n\t    key: \&quot;getUsername\&quot;,\n\t    value: function getUsername() {\n\t      return this.username;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the record&#39;s password\n\t     */\n\t\n\t  }, {\n\t    key: \&quot;getPassword\&quot;,\n\t    value: function getPassword() {\n\t      return this.password;\n\t    }\n\t\n\t    /**\n\t     * @returns {Array} the record&#39;s validationData\n\t     */\n\t\n\t  }, {\n\t    key: \&quot;getValidationData\&quot;,\n\t    value: function getValidationData() {\n\t      return this.validationData;\n\t    }\n\t  }]);\n\t\n\t  return AuthenticationDetails;\n\t}();\n\t\n\texports.default = AuthenticationDetails;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i &lt; props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\&quot;value\&quot; in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\topyright 2016 Amazon.com,\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Inc. or its affiliates. All Rights Reserved.\n\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n\tou may not use this file except in compliance with the\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * License. A copy of the License is located at\n\tn\thttp://aws.amazon.com/asl/\n\tn\tor in the \&quot;license\&quot; file accompanying this file. This file is\n\tdistributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n\texpress or implied. See the License\n\tfor the specific language governing permissions and\n\tlimitations under the License.\n\tn\t\n\tvar _cognitoidentityserviceprovider = __webpack_require__(11);\n\t\n\tvar _cognitoidentityserviceprovider2 = _interopRequireDefault(_cognitoidentityserviceprovider);\n\t\n\tvar _CognitoUser = __webpack_require__(6);\n\t\n\tvar _CognitoUser2 = _interopRequireDefault(_CognitoUser);\n\t\n\tvar _StorageHelper = __webpack_require__(10);\n\t\n\tvar _StorageHelper2 = _interopRequireDefault(_StorageHelper);\n\t\n\tfunction _interopRequireDefault(obj) { return obj &amp;&amp; obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\&quot;Cannot call a class as a function\&quot;); } }\n\t\n\t/** @class */\n\tvar CognitoUserPool = function () {\n\t  /**\n\t   * Constructs a new CognitoUserPool object\n\t   * @param {object} data Creation options.\n\t   * @param {string} data.UserPoolId Cognito user pool id.\n\t   * @param {string} data.ClientId User pool application client id.\n\t   */\n\t  function CognitoUserPool(data) {\n\t    _classCallCheck(this, CognitoUserPool);\n\t\n\t    var _ref = data || {},\n\t        UserPoolId = _ref.UserPoolId,\n\t        ClientId = _ref.ClientId;\n\t\n\t    if (!UserPoolId || !ClientId) {\n\t      throw new Error(&#39;Both UserPoolId and ClientId are required.&#39;);\n\t    }\n\t    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n\t      throw new Error(&#39;Invalid UserPoolId format.&#39;);\n\t    }\n\t    var region = UserPoolId.split(&#39;_&#39;)[0];\n\t\n\t    this.userPoolId = UserPoolId;\n\t    this.clientId = ClientId;\n\t\n\t    this.client = new _cognitoidentityserviceprovider2.default({ apiVersion: &#39;2016-04-19&#39;, region: region });\n\t\n\t    this.storage = new _StorageHelper2.default().getStorage();\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the user pool id\n\t   */\n\t\n\t\n\t  _createClass(CognitoUserPool, [{\n\t    key: &#39;getUserPoolId&#39;,\n\t    value: function getUserPoolId() {\n\t      return this.userPoolId;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the client id\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getClientId&#39;,\n\t    value: function getClientId() {\n\t      return this.clientId;\n\t    }\n\t\n\t    /**\n\t     * @typedef {object} SignUpResult\n\t     * @property {CognitoUser} user New user.\n\t     * @property {bool} userConfirmed If the user is already confirmed.\n\t     */\n\t    /**\n\t     * method for signing up a user\n\t     * @param {string} username User&#39;s username.\n\t     * @param {string} password Plain-text initial password entered by user.\n\t     * @param {(AttributeArg[])=} userAttributes New user attributes.\n\t     * @param {(AttributeArg[])=} validationData Application metadata.\n\t     * @param {nodeCallback&lt;SignUpResult&gt;} callback Called on error or with the new user.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: &#39;signUp&#39;,\n\t    value: function signUp(username, password, userAttributes, validationData, callback) {\n\t      var _this = this;\n\t\n\t      this.client.makeUnauthenticatedRequest(&#39;signUp&#39;, {\n\t        ClientId: this.clientId,\n\t        Username: username,\n\t        Password: password,\n\t        UserAttributes: userAttributes,\n\t        ValidationData: validationData\n\t      }, function (err, data) {\n\t        if (err) {\n\t          return callback(err, null);\n\t        }\n\t\n\t        var cognitoUser = {\n\t          Username: username,\n\t          Pool: _this\n\t        };\n\t\n\t        var returnData = {\n\t          user: new _CognitoUser2.default(cognitoUser),\n\t          userConfirmed: data.UserConfirmed\n\t        };\n\t\n\t        return callback(null, returnData);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * method for getting the current user of the application from the local storage\n\t     *\n\t     * @returns {CognitoUser} the user retrieved from storage\n\t     */\n\t\n\t  }, {\n\t    key: &#39;getCurrentUser&#39;,\n\t    value: function getCurrentUser() {\n\t      var lastUserKey = &#39;CognitoIdentityServiceProvider.&#39; + this.clientId + &#39;.LastAuthUser&#39;;\n\t\n\t      var lastAuthUser = this.storage.getItem(lastUserKey);\n\t      if (lastAuthUser) {\n\t        var cognitoUser = {\n\t          Username: lastAuthUser,\n\t          Pool: this\n\t        };\n\t\n\t        return new _CognitoUser2.default(cognitoUser);\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return CognitoUserPool;\n\t}();\n\t\n\texports.default = CognitoUserPool;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t&#39;use strict&#39;;\n\t\n\tObject.defineProperty(exports, \&quot;__esModule\&quot;, {\n\t  value: true\n\t});\n\t\n\tvar _AuthenticationDetails = __webpack_require__(13);\n\t\n\tObject.defineProperty(exports, &#39;AuthenticationDetails&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_AuthenticationDetails).default;\n\t  }\n\t});\n\t\n\tvar _AuthenticationHelper = __webpack_require__(2);\n\t\n\tObject.defineProperty(exports, &#39;AuthenticationHelper&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_AuthenticationHelper).default;\n\t  }\n\t});\n\t\n\tvar _CognitoAccessToken = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, &#39;CognitoAccessToken&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAccessToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoIdToken = __webpack_require__(4);\n\t\n\tObject.defineProperty(exports, &#39;CognitoIdToken&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoIdToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(5);\n\t\n\tObject.defineProperty(exports, &#39;CognitoRefreshToken&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoRefreshToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUser = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, &#39;CognitoUser&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUser).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUserAttribute = __webpack_require__(7);\n\t\n\tObject.defineProperty(exports, &#39;CognitoUserAttribute&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUserAttribute).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUserPool = __webpack_require__(14);\n\t\n\tObject.defineProperty(exports, &#39;CognitoUserPool&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUserPool).default;\n\t  }\n\t});\n\t\n\tvar _CognitoUserSession = __webpack_require__(8);\n\t\n\tObject.defineProperty(exports, &#39;CognitoUserSession&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoUserSession).default;\n\t  }\n\t});\n\t\n\tvar _DateHelper = __webpack_require__(9);\n\t\n\tObject.defineProperty(exports, &#39;DateHelper&#39;, {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_DateHelper).default;\n\t  }\n\t});\n\n\tfunction _interopRequireDefault(obj) { return obj &amp;&amp; obj.__esModule ? obj : { default: obj }; }\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// amazon-cognito-identity.min.js&quot;,&quot; \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \&quot;\&quot;;\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 03508c239c5db8678652&quot;,&quot;import CognitoIdentityServiceProvider from &#39;aws-sdk/clients/cognitoidentityserviceprovider&#39;;\nimport * as enhancements from &#39;./src&#39;;\n\nexport * from &#39;./src&#39;;\n\nObject.keys(enhancements).forEach(key =&gt; {\n  CognitoIdentityServiceProvider[key] = enhancements[key];\n});\n\n// The version of crypto-browserify included by aws-sdk only\n// checks for window.crypto, not window.msCrypto as used by\n// IE 11 – so we set it explicitly here\nif (typeof window !== &#39;undefined&#39; &amp;&amp; !window.crypto &amp;&amp; window.msCrypto) {\n  window.crypto = window.msCrypto;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./enhance.js&quot;,&quot;module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\&quot;root\&quot;:[\&quot;AWSCognito\&quot;],\&quot;commonjs2\&quot;:\&quot;aws-sdk/global\&quot;,\&quot;commonjs\&quot;:\&quot;aws-sdk/global\&quot;,\&quot;amd\&quot;:\&quot;aws-sdk/global\&quot;}\n// module id = 1\n// module chunks = 0&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { util } from &#39;aws-sdk/global&#39;;\nimport { BigInteger } from &#39;jsbn&#39;;\n\nconst initN = &#39;FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1&#39;\n  + &#39;29024E088A67CC74020BBEA63B139B22514A08798E3404DD&#39;\n  + &#39;EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245&#39;\n  + &#39;E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED&#39;\n  + &#39;EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D&#39;\n  + &#39;C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F&#39;\n  + &#39;83655D23DCA3AD961C62F356208552BB9ED529077096966D&#39;\n  + &#39;670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B&#39;\n  + &#39;E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9&#39;\n  + &#39;DE2BCBF6955817183995497CEA956AE515D2261898FA0510&#39;\n  + &#39;15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64&#39;\n  + &#39;ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7&#39;\n  + &#39;ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B&#39;\n  + &#39;F12FFA06D98A0864D87602733EC86A64521F2B18177B200C&#39;\n  + &#39;BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31&#39;\n  + &#39;43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF&#39;;\n\nconst newPasswordRequiredChallengeUserAttributePrefix = &#39;userAttributes.&#39;;\n\n/** @class */\nexport default class AuthenticationHelper {\n  /**\n   * Constructs a new AuthenticationHelper object\n   * @param {string} PoolName Cognito user pool name.\n   */\n  constructor(PoolName) {\n    this.N = new BigInteger(initN, 16);\n    this.g = new BigInteger(&#39;2&#39;);\n    this.k = new BigInteger(this.hexHash(`00${this.N.toString(16)}0${this.g.toString(16)}`), 16);\n\n    this.smallAValue = this.generateRandomSmallA();\n    this.largeAValue = this.calculateA(this.smallAValue);\n\n    this.infoBits = new util.Buffer(&#39;Caldera Derived Key&#39;, &#39;utf8&#39;);\n\n    this.poolName = PoolName;\n  }\n\n  /**\n   * @returns {BigInteger} small A, a random number\n   */\n  getSmallAValue() {\n    return this.smallAValue;\n  }\n\n  /**\n   * @returns {BigInteger} large A, a value generated from small A\n   */\n  getLargeAValue() {\n    return this.largeAValue;\n  }\n\n  /**\n   * helper function to generate a random big integer\n   * @returns {BigInteger} a random value.\n   * @private\n   */\n  generateRandomSmallA() {\n    const hexRandom = util.crypto.lib.randomBytes(128).toString(&#39;hex&#39;);\n\n    const randomBigInt = new BigInteger(hexRandom, 16);\n    const smallABigInt = randomBigInt.mod(this.N);\n\n    return smallABigInt;\n  }\n\n  /**\n   * helper function to generate a random string\n   * @returns {string} a random value.\n   * @private\n   */\n  generateRandomString() {\n    return util.crypto.lib.randomBytes(40).toString(&#39;base64&#39;);\n  }\n\n  /**\n   * @returns {string} Generated random value included in password hash.\n   */\n  getRandomPassword() {\n    return this.randomPassword;\n  }\n\n  /**\n   * @returns {string} Generated random value included in devices hash.\n   */\n  getSaltDevices() {\n    return this.SaltToHashDevices;\n  }\n\n  /**\n   * @returns {string} Value used to verify devices.\n   */\n  getVerifierDevices() {\n    return this.verifierDevices;\n  }\n\n  /**\n   * Generate salts and compute verifier.\n   * @param {string} deviceGroupKey Devices to generate verifier for.\n   * @param {string} username User to generate verifier for.\n   * @returns {void}\n   */\n  generateHashDevice(deviceGroupKey, username) {\n    this.randomPassword = this.generateRandomString();\n    const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n    const hashedString = this.hash(combinedString);\n\n    const hexRandom = util.crypto.lib.randomBytes(16).toString(&#39;hex&#39;);\n    this.SaltToHashDevices = this.padHex(new BigInteger(hexRandom, 16));\n\n    const verifierDevicesNotPadded = this.g.modPow(\n      new BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16),\n      this.N);\n\n    this.verifierDevices = this.padHex(verifierDevicesNotPadded);\n  }\n\n  /**\n   * Calculate the client&#39;s public value A = g^a%N\n   * with the generated random number a\n   * @param {BigInteger} a Randomly generated small A.\n   * @returns {BigInteger} Computed large A.\n   * @private\n   */\n  calculateA(a) {\n    const A = this.g.modPow(a, this.N);\n\n    if (A.mod(this.N).toString() === &#39;0&#39;) {\n      throw new Error(&#39;Illegal paramater. A mod N cannot be 0.&#39;);\n    }\n    return A;\n  }\n\n  /**\n   * Calculate the client&#39;s value U which is the hash of A and B\n   * @param {BigInteger} A Large A value.\n   * @param {BigInteger} B Server B value.\n   * @returns {BigInteger} Computed U value.\n   * @private\n   */\n  calculateU(A, B) {\n    this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n    const finalU = new BigInteger(this.UHexHash, 16);\n\n    return finalU;\n  }\n\n  /**\n   * Calculate a hash from a bitArray\n   * @param {Buffer} buf Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  hash(buf) {\n    const hashHex = util.crypto.sha256(buf, &#39;hex&#39;);\n    return (new Array(64 - hashHex.length).join(&#39;0&#39;)) + hashHex;\n  }\n\n  /**\n   * Calculate a hash from a hex string\n   * @param {String} hexStr Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  hexHash(hexStr) {\n    return this.hash(new util.Buffer(hexStr, &#39;hex&#39;));\n  }\n\n  /**\n   * Standard hkdf algorithm\n   * @param {Buffer} ikm Input key material.\n   * @param {Buffer} salt Salt value.\n   * @returns {Buffer} Strong key material.\n   * @private\n   */\n  computehkdf(ikm, salt) {\n    const prk = util.crypto.hmac(salt, ikm, &#39;buffer&#39;, &#39;sha256&#39;);\n    const infoBitsUpdate = util.buffer.concat([\n      this.infoBits,\n      new util.Buffer(String.fromCharCode(1), &#39;utf8&#39;),\n    ]);\n    const hmac = util.crypto.hmac(prk, infoBitsUpdate, &#39;buffer&#39;, &#39;sha256&#39;);\n    return hmac.slice(0, 16);\n  }\n\n  /**\n   * Calculates the final hkdf based on computed S value, and computed U value and the key\n   * @param {String} username Username.\n   * @param {String} password Password.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {BigInteger} salt Generated salt.\n   * @returns {Buffer} Computed HKDF value.\n   */\n  getPasswordAuthenticationKey(username, password, serverBValue, salt) {\n    if (serverBValue.mod(this.N).equals(new BigInteger(&#39;0&#39;, 16))) {\n      throw new Error(&#39;B cannot be zero.&#39;);\n    }\n\n    this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\n    if (this.UValue.equals(new BigInteger(&#39;0&#39;, 16))) {\n      throw new Error(&#39;U cannot be zero.&#39;);\n    }\n\n    const usernamePassword = `${this.poolName}${username}:${password}`;\n    const usernamePasswordHash = this.hash(usernamePassword);\n\n    const xValue = new BigInteger(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n\n    const gModPowXN = this.g.modPow(xValue, this.N);\n    const intValue2 = serverBValue.subtract(this.k.multiply(gModPowXN));\n    const sValue = intValue2.modPow(\n      this.smallAValue.add(this.UValue.multiply(xValue)),\n      this.N\n    ).mod(this.N);\n\n    const hkdf = this.computehkdf(\n      new util.Buffer(this.padHex(sValue), &#39;hex&#39;),\n      new util.Buffer(this.padHex(this.UValue.toString(16)), &#39;hex&#39;));\n\n    return hkdf;\n  }\n\n  /**\n  * Return constant newPasswordRequiredChallengeUserAttributePrefix\n  * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n  */\n  getNewPasswordRequiredChallengeUserAttributePrefix() {\n    return newPasswordRequiredChallengeUserAttributePrefix;\n  }\n\n  /**\n   * Converts a BigInteger (or hex string) to hex format padded with zeroes for hashing\n   * @param {BigInteger|String} bigInt Number or string to pad.\n   * @returns {String} Padded hex string.\n   */\n  padHex(bigInt) {\n    let hashStr = bigInt.toString(16);\n    if (hashStr.length % 2 === 1) {\n      hashStr = `0${hashStr}`;\n    } else if (&#39;89ABCDEFabcdef&#39;.indexOf(hashStr[0]) !== -1) {\n      hashStr = `00${hashStr}`;\n    }\n    return hashStr;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/AuthenticationHelper.js&quot;,&quot;/*\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { util } from &#39;aws-sdk/global&#39;;\n\n/** @class */\nexport default class CognitoAccessToken {\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  constructor({ AccessToken } = {}) {\n    // Assign object\n    this.jwtToken = AccessToken || &#39;&#39;;\n  }\n\n  /**\n   * @returns {string} the record&#39;s token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * @returns {int} the token&#39;s expiration (exp member).\n   */\n  getExpiration() {\n    const payload = this.jwtToken.split(&#39;.&#39;)[1];\n    const expiration = JSON.parse(util.base64.decode(payload).toString(&#39;utf8&#39;));\n    return expiration.exp;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAccessToken.js&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { util } from &#39;aws-sdk/global&#39;;\n\n/** @class */\nexport default class CognitoIdToken {\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  constructor({ IdToken } = {}) {\n    // Assign object\n    this.jwtToken = IdToken || &#39;&#39;;\n  }\n\n  /**\n   * @returns {string} the record&#39;s token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * @returns {int} the token&#39;s expiration (exp member).\n   */\n  getExpiration() {\n    const payload = this.jwtToken.split(&#39;.&#39;)[1];\n    const expiration = JSON.parse(util.base64.decode(payload).toString(&#39;utf8&#39;));\n    return expiration.exp;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoIdToken.js&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class CognitoRefreshToken {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  constructor({ RefreshToken } = {}) {\n    // Assign object\n    this.token = RefreshToken || &#39;&#39;;\n  }\n\n  /**\n   * @returns {string} the record&#39;s token.\n   */\n  getToken() {\n    return this.token;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoRefreshToken.js&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { util } from &#39;aws-sdk/global&#39;;\nimport { BigInteger } from &#39;jsbn&#39;;\n\nimport AuthenticationHelper from &#39;./AuthenticationHelper&#39;;\nimport CognitoAccessToken from &#39;./CognitoAccessToken&#39;;\nimport CognitoIdToken from &#39;./CognitoIdToken&#39;;\nimport CognitoRefreshToken from &#39;./CognitoRefreshToken&#39;;\nimport CognitoUserSession from &#39;./CognitoUserSession&#39;;\nimport DateHelper from &#39;./DateHelper&#39;;\nimport CognitoUserAttribute from &#39;./CognitoUserAttribute&#39;;\nimport StorageHelper from &#39;./StorageHelper&#39;;\n\n/**\n * @callback nodeCallback\n * @template T result\n * @param {*} err The operation failure reason, or null.\n * @param {T} result The operation result.\n */\n\n/**\n * @callback onFailure\n * @param {*} err Failure reason.\n */\n\n/**\n * @callback onSuccess\n * @template T result\n * @param {T} result The operation result.\n */\n\n/**\n * @callback mfaRequired\n * @param {*} details MFA challenge details.\n */\n\n/**\n * @callback customChallenge\n * @param {*} details Custom challenge details.\n */\n\n/**\n * @callback inputVerificationCode\n * @param {*} data Server response.\n */\n\n/**\n * @callback authSuccess\n * @param {CognitoUserSession} session The new session.\n * @param {bool=} userConfirmationNecessary User must be confirmed.\n */\n\n\n/** @class */\nexport default class CognitoUser {\n  /**\n   * Constructs a new CognitoUser object\n   * @param {object} data Creation options\n   * @param {string} data.Username The user&#39;s username.\n   * @param {CognitoUserPool} data.Pool Pool containing the user.\n   */\n  constructor(data) {\n    if (data == null || data.Username == null || data.Pool == null) {\n      throw new Error(&#39;Username and pool information are required.&#39;);\n    }\n\n    this.username = data.Username || &#39;&#39;;\n    this.pool = data.Pool;\n    this.Session = null;\n\n    this.client = data.Pool.client;\n\n    this.signInUserSession = null;\n    this.authenticationFlowType = &#39;USER_SRP_AUTH&#39;;\n\n    this.storage = new StorageHelper().getStorage();\n  }\n\n  /**\n   * @returns {CognitoUserSession} the current session for this user\n   */\n  getSignInUserSession() {\n    return this.signInUserSession;\n  }\n\n  /**\n   * @returns {string} the user&#39;s username\n   */\n  getUsername() {\n    return this.username;\n  }\n\n  /**\n   * @returns {String} the authentication flow type\n   */\n  getAuthenticationFlowType() {\n    return this.authenticationFlowType;\n  }\n\n  /**\n   * sets authentication flow type\n   * @param {string} authenticationFlowType New value.\n   * @returns {void}\n   */\n  setAuthenticationFlowType(authenticationFlowType) {\n    this.authenticationFlowType = authenticationFlowType;\n  }\n\n  /**\n   * This is used for authenticating the user. it calls the AuthenticationHelper for SRP related\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  authenticateUser(authDetails, callback) {\n    const authenticationHelper = new AuthenticationHelper(\n      this.pool.getUserPoolId().split(&#39;_&#39;)[1]);\n    const dateHelper = new DateHelper();\n\n    let serverBValue;\n    let salt;\n    const authParameters = {};\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    authParameters.USERNAME = this.username;\n    authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\n    if (this.authenticationFlowType === &#39;CUSTOM_AUTH&#39;) {\n      authParameters.CHALLENGE_NAME = &#39;SRP_A&#39;;\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;initiateAuth&#39;, {\n      AuthFlow: this.authenticationFlowType,\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: authDetails.getValidationData(),\n    }, (err, data) =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeParameters = data.ChallengeParameters;\n\n      this.username = challengeParameters.USER_ID_FOR_SRP;\n      serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n      salt = new BigInteger(challengeParameters.SALT, 16);\n      this.getCachedDeviceKeyAndPassword();\n\n      const hkdf = authenticationHelper.getPasswordAuthenticationKey(\n        this.username,\n        authDetails.getPassword(),\n        serverBValue,\n        salt);\n\n      const dateNow = dateHelper.getNowString();\n\n      const signatureString = util.crypto.hmac(hkdf, util.buffer.concat([\n        new util.Buffer(this.pool.getUserPoolId().split(&#39;_&#39;)[1], &#39;utf8&#39;),\n        new util.Buffer(this.username, &#39;utf8&#39;),\n        new util.Buffer(challengeParameters.SECRET_BLOCK, &#39;base64&#39;),\n        new util.Buffer(dateNow, &#39;utf8&#39;),\n      ]), &#39;base64&#39;, &#39;sha256&#39;);\n\n      const challengeResponses = {};\n\n      challengeResponses.USERNAME = this.username;\n      challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n      challengeResponses.TIMESTAMP = dateNow;\n      challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\n      if (this.deviceKey != null) {\n        challengeResponses.DEVICE_KEY = this.deviceKey;\n      }\n\n      const respondToAuthChallenge = (challenge, challengeCallback) =&gt;\n        this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, challenge,\n          (errChallenge, dataChallenge) =&gt; {\n            if (errChallenge &amp;&amp; errChallenge.code === &#39;ResourceNotFoundException&#39; &amp;&amp;\n                errChallenge.message.toLowerCase().indexOf(&#39;device&#39;) !== -1) {\n              challengeResponses.DEVICE_KEY = null;\n              this.deviceKey = null;\n              this.randomPassword = null;\n              this.deviceGroupKey = null;\n              this.clearCachedDeviceKeyAndPassword();\n              return respondToAuthChallenge(challenge, challengeCallback);\n            }\n            return challengeCallback(errChallenge, dataChallenge);\n          });\n\n      respondToAuthChallenge({\n        ChallengeName: &#39;PASSWORD_VERIFIER&#39;,\n        ClientId: this.pool.getClientId(),\n        ChallengeResponses: challengeResponses,\n        Session: data.Session,\n      }, (errAuthenticate, dataAuthenticate) =&gt; {\n        if (errAuthenticate) {\n          return callback.onFailure(errAuthenticate);\n        }\n\n        const challengeName = dataAuthenticate.ChallengeName;\n        if (challengeName === &#39;NEW_PASSWORD_REQUIRED&#39;) {\n          this.Session = dataAuthenticate.Session;\n          let userAttributes = null;\n          let rawRequiredAttributes = null;\n          const requiredAttributes = [];\n          const userAttributesPrefix = authenticationHelper\n            .getNewPasswordRequiredChallengeUserAttributePrefix();\n\n          if (dataAuthenticate.ChallengeParameters) {\n            userAttributes = JSON.parse(\n              dataAuthenticate.ChallengeParameters.userAttributes);\n            rawRequiredAttributes = JSON.parse(\n              dataAuthenticate.ChallengeParameters.requiredAttributes);\n          }\n\n          if (rawRequiredAttributes) {\n            for (let i = 0; i &lt; rawRequiredAttributes.length; i++) {\n              requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n            }\n          }\n          return callback.newPasswordRequired(userAttributes, requiredAttributes);\n        }\n        return this.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n      });\n      return undefined;\n    });\n  }\n\n  /**\n  * PRIVATE ONLY: This is an internal only method and should not\n  * be directly called by the consumers.\n  * @param {object} dataAuthenticate authentication data\n  * @param {object} authenticationHelper helper created\n  * @param {callback} callback passed on from caller\n  * @returns {void}\n  */\n  authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n    const challengeName = dataAuthenticate.ChallengeName;\n    const challengeParameters = dataAuthenticate.ChallengeParameters;\n\n    if (challengeName === &#39;SMS_MFA&#39;) {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === &#39;CUSTOM_CHALLENGE&#39;) {\n      this.Session = dataAuthenticate.Session;\n      return callback.customChallenge(challengeParameters);\n    }\n\n    if (challengeName === &#39;DEVICE_SRP_AUTH&#39;) {\n      this.getDeviceResponse(callback);\n      return undefined;\n    }\n\n    this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n    this.cacheTokens();\n\n    const newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n    if (newDeviceMetadata == null) {\n      return callback.onSuccess(this.signInUserSession);\n    }\n\n    authenticationHelper.generateHashDevice(\n      dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,\n      dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\n    const deviceSecretVerifierConfig = {\n      Salt: new util.Buffer(\n          authenticationHelper.getSaltDevices(), &#39;hex&#39;\n        ).toString(&#39;base64&#39;),\n      PasswordVerifier: new util.Buffer(\n          authenticationHelper.getVerifierDevices(), &#39;hex&#39;\n        ).toString(&#39;base64&#39;),\n    };\n\n    this.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n    this.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n    this.randomPassword = authenticationHelper.getRandomPassword();\n\n    this.client.makeUnauthenticatedRequest(&#39;confirmDevice&#39;, {\n      DeviceKey: newDeviceMetadata.DeviceKey,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n      DeviceName: navigator.userAgent,\n    }, (errConfirm, dataConfirm) =&gt; {\n      if (errConfirm) {\n        return callback.onFailure(errConfirm);\n      }\n\n      this.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n      this.cacheDeviceKeyAndPassword();\n      if (dataConfirm.UserConfirmationNecessary === true) {\n        return callback.onSuccess(\n          this.signInUserSession, dataConfirm.UserConfirmationNecessary);\n      }\n      return callback.onSuccess(this.signInUserSession);\n    });\n    return undefined;\n  }\n\n  /**\n  * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n  * Pass the new password with any new user attributes to be updated.\n  * User attribute keys must be of format userAttributes.&lt;attribute_name&gt;.\n  * @param {string} newPassword new password for this user\n  * @param {object} requiredAttributeData map with values for all required attributes\n  * @param {object} callback Result callback map.\n  * @param {onFailure} callback.onFailure Called on any error.\n  * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n  * @param {customChallenge} callback.customChallenge Custom challenge\n  *         response required to continue.\n  * @param {authSuccess} callback.onSuccess Called on success with the new session.\n  * @returns {void}\n  */\n  completeNewPasswordChallenge(newPassword, requiredAttributeData, callback) {\n    if (!newPassword) {\n      return callback.onFailure(new Error(&#39;New password is required.&#39;));\n    }\n    const authenticationHelper = new AuthenticationHelper(\n      this.pool.getUserPoolId().split(&#39;_&#39;)[1]);\n    const userAttributesPrefix = authenticationHelper\n      .getNewPasswordRequiredChallengeUserAttributePrefix();\n\n    const finalUserAttributes = {};\n    if (requiredAttributeData) {\n      Object.keys(requiredAttributeData).forEach((key) =&gt; {\n        finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n      });\n    }\n\n    finalUserAttributes.NEW_PASSWORD = newPassword;\n    finalUserAttributes.USERNAME = this.username;\n    this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n      ChallengeName: &#39;NEW_PASSWORD_REQUIRED&#39;,\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: finalUserAttributes,\n      Session: this.Session,\n    }, (errAuthenticate, dataAuthenticate) =&gt; {\n      if (errAuthenticate) {\n        return callback.onFailure(errAuthenticate);\n      }\n      return this.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to get a session using device authentication. It is called at the end of user\n   * authentication\n   *\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   * @private\n   */\n  getDeviceResponse(callback) {\n    const authenticationHelper = new AuthenticationHelper(\n      this.deviceGroupKey);\n    const dateHelper = new DateHelper();\n\n    const authParameters = {};\n\n    authParameters.USERNAME = this.username;\n    authParameters.DEVICE_KEY = this.deviceKey;\n    authParameters.SRP_A = authenticationHelper.getLargeAValue().toString(16);\n\n    this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n      ChallengeName: &#39;DEVICE_SRP_AUTH&#39;,\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: authParameters,\n    }, (err, data) =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeParameters = data.ChallengeParameters;\n\n      const serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n      const salt = new BigInteger(challengeParameters.SALT, 16);\n\n      const hkdf = authenticationHelper.getPasswordAuthenticationKey(\n        this.deviceKey,\n        this.randomPassword,\n        serverBValue,\n        salt);\n\n      const dateNow = dateHelper.getNowString();\n\n      const signatureString = util.crypto.hmac(hkdf, util.buffer.concat([\n        new util.Buffer(this.deviceGroupKey, &#39;utf8&#39;),\n        new util.Buffer(this.deviceKey, &#39;utf8&#39;),\n        new util.Buffer(challengeParameters.SECRET_BLOCK, &#39;base64&#39;),\n        new util.Buffer(dateNow, &#39;utf8&#39;),\n      ]), &#39;base64&#39;, &#39;sha256&#39;);\n\n      const challengeResponses = {};\n\n      challengeResponses.USERNAME = this.username;\n      challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n      challengeResponses.TIMESTAMP = dateNow;\n      challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n\n      this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n        ChallengeName: &#39;DEVICE_PASSWORD_VERIFIER&#39;,\n        ClientId: this.pool.getClientId(),\n        ChallengeResponses: challengeResponses,\n        Session: data.Session,\n      }, (errAuthenticate, dataAuthenticate) =&gt; {\n        if (errAuthenticate) {\n          return callback.onFailure(errAuthenticate);\n        }\n\n        this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n        this.cacheTokens();\n\n        return callback.onSuccess(this.signInUserSession);\n      });\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used for a certain user to confirm the registration by using a confirmation code\n   * @param {string} confirmationCode Code entered by user.\n   * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n   * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  confirmRegistration(confirmationCode, forceAliasCreation, callback) {\n    this.client.makeUnauthenticatedRequest(&#39;confirmSignUp&#39;, {\n      ClientId: this.pool.getClientId(),\n      ConfirmationCode: confirmationCode,\n      Username: this.username,\n      ForceAliasCreation: forceAliasCreation,\n    }, err =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, &#39;SUCCESS&#39;);\n    });\n  }\n\n  /**\n   * This is used by the user once he has the responses to a custom challenge\n   * @param {string} answerChallenge The custom challange answer.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge\n   *    Custom challenge response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  sendCustomChallengeAnswer(answerChallenge, callback) {\n    const challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n\n    this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n      ChallengeName: &#39;CUSTOM_CHALLENGE&#39;,\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n    }, (err, data) =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeName = data.ChallengeName;\n\n      if (challengeName === &#39;CUSTOM_CHALLENGE&#39;) {\n        this.Session = data.Session;\n        return callback.customChallenge(data.ChallengeParameters);\n      }\n\n      this.signInUserSession = this.getCognitoUserSession(data.AuthenticationResult);\n      this.cacheTokens();\n      return callback.onSuccess(this.signInUserSession);\n    });\n  }\n\n  /**\n   * This is used by the user once he has an MFA code\n   * @param {string} confirmationCode The MFA code entered by the user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  sendMFACode(confirmationCode, callback) {\n    const challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.SMS_MFA_CODE = confirmationCode;\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;respondToAuthChallenge&#39;, {\n      ChallengeName: &#39;SMS_MFA&#39;,\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n    }, (err, dataAuthenticate) =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      const challengeName = dataAuthenticate.ChallengeName;\n\n      if (challengeName === &#39;DEVICE_SRP_AUTH&#39;) {\n        this.getDeviceResponse(callback);\n        return undefined;\n      }\n\n      this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n      this.cacheTokens();\n\n      if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n        return callback.onSuccess(this.signInUserSession);\n      }\n\n      const authenticationHelper = new AuthenticationHelper(\n        this.pool.getUserPoolId().split(&#39;_&#39;)[1]);\n      authenticationHelper.generateHashDevice(\n        dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey,\n        dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey);\n\n      const deviceSecretVerifierConfig = {\n        Salt: new util.Buffer(\n            authenticationHelper.getSaltDevices(), &#39;hex&#39;\n          ).toString(&#39;base64&#39;),\n        PasswordVerifier: new util.Buffer(\n            authenticationHelper.getVerifierDevices(), &#39;hex&#39;\n          ).toString(&#39;base64&#39;),\n      };\n\n      this.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n      this.deviceGroupKey = dataAuthenticate.AuthenticationResult\n        .NewDeviceMetadata.DeviceGroupKey;\n      this.randomPassword = authenticationHelper.getRandomPassword();\n\n      this.client.makeUnauthenticatedRequest(&#39;confirmDevice&#39;, {\n        DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        DeviceName: navigator.userAgent,\n      }, (errConfirm, dataConfirm) =&gt; {\n        if (errConfirm) {\n          return callback.onFailure(errConfirm);\n        }\n\n        this.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n        this.cacheDeviceKeyAndPassword();\n        if (dataConfirm.UserConfirmationNecessary === true) {\n          return callback.onSuccess(\n            this.signInUserSession,\n            dataConfirm.UserConfirmationNecessary);\n        }\n        return callback.onSuccess(this.signInUserSession);\n      });\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used by an authenticated user to change the current password\n   * @param {string} oldUserPassword The current password.\n   * @param {string} newUserPassword The requested new password.\n   * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  changePassword(oldUserPassword, newUserPassword, callback) {\n    if (!(this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid())) {\n      return callback(new Error(&#39;User is not authenticated&#39;), null);\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;changePassword&#39;, {\n      PreviousPassword: oldUserPassword,\n      ProposedPassword: newUserPassword,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, &#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to enable MFA for himself\n   * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  enableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error(&#39;User is not authenticated&#39;), null);\n    }\n\n    const mfaOptions = [];\n    const mfaEnabled = {\n      DeliveryMedium: &#39;SMS&#39;,\n      AttributeName: &#39;phone_number&#39;,\n    };\n    mfaOptions.push(mfaEnabled);\n\n    this.client.makeUnauthenticatedRequest(&#39;setUserSettings&#39;, {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, &#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to disable MFA for himself\n   * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  disableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error(&#39;User is not authenticated&#39;), null);\n    }\n\n    const mfaOptions = [];\n\n    this.client.makeUnauthenticatedRequest(&#39;setUserSettings&#39;, {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, &#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n\n  /**\n   * This is used by an authenticated user to delete himself\n   * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  deleteUser(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error(&#39;User is not authenticated&#39;), null);\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;deleteUser&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n      this.clearCachedTokens();\n      return callback(null, &#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n   */\n  /**\n   * This is used by an authenticated user to change a list of attributes\n   * @param {AttributeArg[]} attributes A list of the new user attributes.\n   * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  updateAttributes(attributes, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error(&#39;User is not authenticated&#39;), null);\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;updateUserAttributes&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      UserAttributes: attributes,\n    }, err =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, &#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to get a list of attributes\n   * @param {nodeCallback&lt;CognitoUserAttribute[]&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  getUserAttributes(callback) {\n    if (!(this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid())) {\n      return callback(new Error(&#39;User is not authenticated&#39;), null);\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;getUser&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, (err, userData) =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n\n      const attributeList = [];\n\n      for (let i = 0; i &lt; userData.UserAttributes.length; i++) {\n        const attribute = {\n          Name: userData.UserAttributes[i].Name,\n          Value: userData.UserAttributes[i].Value,\n        };\n        const userAttribute = new CognitoUserAttribute(attribute);\n        attributeList.push(userAttribute);\n      }\n\n      return callback(null, attributeList);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to get the MFAOptions\n   * @param {nodeCallback&lt;MFAOptions&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  getMFAOptions(callback) {\n    if (!(this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid())) {\n      return callback(new Error(&#39;User is not authenticated&#39;), null);\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;getUser&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, (err, userData) =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, userData.MFAOptions);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by an authenticated user to delete a list of attributes\n   * @param {string[]} attributeList Names of the attributes to delete.\n   * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  deleteAttributes(attributeList, callback) {\n    if (!(this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid())) {\n      return callback(new Error(&#39;User is not authenticated&#39;), null);\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;deleteUserAttributes&#39;, {\n      UserAttributeNames: attributeList,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, &#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used by a user to resend a confirmation code\n   * @param {nodeCallback&lt;string&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  resendConfirmationCode(callback) {\n    this.client.makeUnauthenticatedRequest(&#39;resendConfirmationCode&#39;, {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n    }, err =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, &#39;SUCCESS&#39;);\n    });\n  }\n\n  /**\n   * This is used to get a session, either from the session object\n   * or from  the local storage, or by using a refresh token\n   *\n   * @param {nodeCallback&lt;CognitoUserSession&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  getSession(callback) {\n    if (this.username == null) {\n      return callback(new Error(&#39;Username is null. Cannot retrieve a new session&#39;), null);\n    }\n\n    if (this.signInUserSession != null &amp;&amp; this.signInUserSession.isValid()) {\n      return callback(null, this.signInUserSession);\n    }\n\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const idTokenKey = `${keyPrefix}.idToken`;\n    const accessTokenKey = `${keyPrefix}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.refreshToken`;\n\n    if (this.storage.getItem(idTokenKey)) {\n      const idToken = new CognitoIdToken({\n        IdToken: this.storage.getItem(idTokenKey),\n      });\n      const accessToken = new CognitoAccessToken({\n        AccessToken: this.storage.getItem(accessTokenKey),\n      });\n      const refreshToken = new CognitoRefreshToken({\n        RefreshToken: this.storage.getItem(refreshTokenKey),\n      });\n\n      const sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n      };\n      const cachedSession = new CognitoUserSession(sessionData);\n      if (cachedSession.isValid()) {\n        this.signInUserSession = cachedSession;\n        return callback(null, this.signInUserSession);\n      }\n\n      if (refreshToken.getToken() == null) {\n        return callback(new Error(&#39;Cannot retrieve a new session. Please authenticate.&#39;), null);\n      }\n\n      this.refreshSession(refreshToken, callback);\n    } else {\n      callback(new Error(&#39;Local storage is missing an ID Token, Please authenticate&#39;), null);\n    }\n\n    return undefined;\n  }\n\n\n  /**\n   * This uses the refreshToken to retrieve a new session\n   * @param {CognitoRefreshToken} refreshToken A previous session&#39;s refresh token.\n   * @param {nodeCallback&lt;CognitoUserSession&gt;} callback Called on success or error.\n   * @returns {void}\n   */\n  refreshSession(refreshToken, callback) {\n    const authParameters = {};\n    authParameters.REFRESH_TOKEN = refreshToken.getToken();\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n\n    if (this.storage.getItem(lastUserKey)) {\n      this.username = this.storage.getItem(lastUserKey);\n      const deviceKeyKey = `${keyPrefix}.${this.username}.deviceKey`;\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;initiateAuth&#39;, {\n      ClientId: this.pool.getClientId(),\n      AuthFlow: &#39;REFRESH_TOKEN_AUTH&#39;,\n      AuthParameters: authParameters,\n    }, (err, authResult) =&gt; {\n      if (err) {\n        if (err.code === &#39;NotAuthorizedException&#39;) {\n          this.clearCachedTokens();\n        }\n        return callback(err, null);\n      }\n      if (authResult) {\n        const authenticationResult = authResult.AuthenticationResult;\n        if (!Object.prototype.hasOwnProperty.call(authenticationResult, &#39;RefreshToken&#39;)) {\n          authenticationResult.RefreshToken = refreshToken.getToken();\n        }\n        this.signInUserSession = this.getCognitoUserSession(authenticationResult);\n        this.cacheTokens();\n        return callback(null, this.signInUserSession);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * This is used to save the session tokens to local storage\n   * @returns {void}\n   */\n  cacheTokens() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}`;\n    const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\n    const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n\n    this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n    this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n    this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n    this.storage.setItem(lastUserKey, this.username);\n  }\n\n  /**\n   * This is used to cache the device key and device group and device password\n   * @returns {void}\n   */\n  cacheDeviceKeyAndPassword() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const deviceKeyKey = `${keyPrefix}.deviceKey`;\n    const randomPasswordKey = `${keyPrefix}.randomPasswordKey`;\n    const deviceGroupKeyKey = `${keyPrefix}.deviceGroupKey`;\n\n    this.storage.setItem(deviceKeyKey, this.deviceKey);\n    this.storage.setItem(randomPasswordKey, this.randomPassword);\n    this.storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n  }\n\n  /**\n   * This is used to get current device key and device group and device password\n   * @returns {void}\n   */\n  getCachedDeviceKeyAndPassword() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const deviceKeyKey = `${keyPrefix}.deviceKey`;\n    const randomPasswordKey = `${keyPrefix}.randomPasswordKey`;\n    const deviceGroupKeyKey = `${keyPrefix}.deviceGroupKey`;\n\n    if (this.storage.getItem(deviceKeyKey)) {\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      this.randomPassword = this.storage.getItem(randomPasswordKey);\n      this.deviceGroupKey = this.storage.getItem(deviceGroupKeyKey);\n    }\n  }\n\n  /**\n   * This is used to clear the device key info from local storage\n   * @returns {void}\n   */\n  clearCachedDeviceKeyAndPassword() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}.${this.username}`;\n    const deviceKeyKey = `${keyPrefix}.deviceKey`;\n    const randomPasswordKey = `${keyPrefix}.randomPasswordKey`;\n    const deviceGroupKeyKey = `${keyPrefix}.deviceGroupKey`;\n\n    this.storage.removeItem(deviceKeyKey);\n    this.storage.removeItem(randomPasswordKey);\n    this.storage.removeItem(deviceGroupKeyKey);\n  }\n\n  /**\n   * This is used to clear the session tokens from local storage\n   * @returns {void}\n   */\n  clearCachedTokens() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.pool.getClientId()}`;\n    const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\n    const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n\n    this.storage.removeItem(idTokenKey);\n    this.storage.removeItem(accessTokenKey);\n    this.storage.removeItem(refreshTokenKey);\n    this.storage.removeItem(lastUserKey);\n  }\n\n  /**\n   * This is used to build a user session from tokens retrieved in the authentication result\n   * @param {object} authResult Successful auth response from server.\n   * @returns {CognitoUserSession} The new user session.\n   * @private\n   */\n  getCognitoUserSession(authResult) {\n    const idToken = new CognitoIdToken(authResult);\n    const accessToken = new CognitoAccessToken(authResult);\n    const refreshToken = new CognitoRefreshToken(authResult);\n\n    const sessionData = {\n      IdToken: idToken,\n      AccessToken: accessToken,\n      RefreshToken: refreshToken,\n    };\n\n    return new CognitoUserSession(sessionData);\n  }\n\n  /**\n   * This is used to initiate a forgot password request\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode?} callback.inputVerificationCode\n   *    Optional callback raised instead of onSuccess with response data.\n   * @param {onSuccess&lt;void&gt;?} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  forgotPassword(callback) {\n    this.client.makeUnauthenticatedRequest(&#39;forgotPassword&#39;, {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n    }, (err, data) =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      if (typeof callback.inputVerificationCode === &#39;function&#39;) {\n        return callback.inputVerificationCode(data);\n      }\n      return callback.onSuccess();\n    });\n  }\n\n  /**\n   * This is used to confirm a new password using a confirmationCode\n   * @param {string} confirmationCode Code entered by user.\n   * @param {string} newPassword Confirm new password.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess&lt;void&gt;} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  confirmPassword(confirmationCode, newPassword, callback) {\n    this.client.makeUnauthenticatedRequest(&#39;confirmForgotPassword&#39;, {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ConfirmationCode: confirmationCode,\n      Password: newPassword,\n    }, err =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess();\n    });\n  }\n\n  /**\n   * This is used to initiate an attribute confirmation request\n   * @param {string} attributeName User attribute that needs confirmation.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n   * @returns {void}\n   */\n  getAttributeVerificationCode(attributeName, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;getUserAttributeVerificationCode&#39;, {\n      AttributeName: attributeName,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, (err, data) =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.inputVerificationCode(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to confirm an attribute using a confirmation code\n   * @param {string} attributeName Attribute being confirmed.\n   * @param {string} confirmationCode Code entered by user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  verifyAttribute(attributeName, confirmationCode, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;verifyUserAttribute&#39;, {\n      AttributeName: attributeName,\n      Code: confirmationCode,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(&#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to get the device information using the current device key\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess&lt;*&gt;} callback.onSuccess Called on success with device data.\n   * @returns {void}\n   */\n  getDevice(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;getDevice&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n    }, (err, data) =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to forget a specific device\n   * @param {string} deviceKey Device key.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  forgetSpecificDevice(deviceKey, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;forgetDevice&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: deviceKey,\n    }, err =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(&#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to forget the current device\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  forgetDevice(callback) {\n    this.forgetSpecificDevice(this.deviceKey, {\n      onFailure: callback.onFailure,\n      onSuccess: result =&gt; {\n        this.deviceKey = null;\n        this.deviceGroupKey = null;\n        this.randomPassword = null;\n        this.clearCachedDeviceKeyAndPassword();\n        return callback.onSuccess(result);\n      },\n    });\n  }\n\n  /**\n   * This is used to set the device status as remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  setDeviceStatusRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;updateDeviceStatus&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: &#39;remembered&#39;,\n    }, err =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(&#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to set the device status as not remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  setDeviceStatusNotRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;updateDeviceStatus&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: &#39;not_remembered&#39;,\n    }, err =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(&#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to list all devices for a user\n   *\n   * @param {int} limit the number of devices returned in a call\n   * @param {string} paginationToken the pagination token in case any was returned before\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess&lt;*&gt;} callback.onSuccess Called on success with device list.\n   * @returns {void}\n   */\n  listDevices(limit, paginationToken, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;listDevices&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      Limit: limit,\n      PaginationToken: paginationToken,\n    }, (err, data) =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used to globally revoke all tokens issued to a user\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess&lt;string&gt;} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  globalSignOut(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error(&#39;User is not authenticated&#39;));\n    }\n\n    this.client.makeUnauthenticatedRequest(&#39;globalSignOut&#39;, {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n    }, err =&gt; {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      this.clearCachedTokens();\n      return callback.onSuccess(&#39;SUCCESS&#39;);\n    });\n    return undefined;\n  }\n\n  /**\n   * This is used for the user to signOut of the application and clear the cached tokens.\n   * @returns {void}\n   */\n  signOut() {\n    this.signInUserSession = null;\n    this.clearCachedTokens();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoUser.js&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class CognitoUserAttribute {\n  /**\n   * Constructs a new CognitoUserAttribute object\n   * @param {string=} Name The record&#39;s name\n   * @param {string=} Value The record&#39;s value\n   */\n  constructor({ Name, Value } = {}) {\n    this.Name = Name || &#39;&#39;;\n    this.Value = Value || &#39;&#39;;\n  }\n\n  /**\n   * @returns {string} the record&#39;s value.\n   */\n  getValue() {\n    return this.Value;\n  }\n\n  /**\n   * Sets the record&#39;s value.\n   * @param {string} value The new value.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  setValue(value) {\n    this.Value = value;\n    return this;\n  }\n\n  /**\n   * @returns {string} the record&#39;s name.\n   */\n  getName() {\n    return this.Name;\n  }\n\n  /**\n   * Sets the record&#39;s name\n   * @param {string} name The new name.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  setName(name) {\n    this.Name = name;\n    return this;\n  }\n\n  /**\n   * @returns {string} a string representation of the record.\n   */\n  toString() {\n    return JSON.stringify(this);\n  }\n\n  /**\n   * @returns {object} a flat object representing the record.\n   */\n  toJSON() {\n    return {\n      Name: this.Name,\n      Value: this.Value,\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoUserAttribute.js&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class CognitoUserSession {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {string} IdToken The session&#39;s Id token.\n   * @param {string=} RefreshToken The session&#39;s refresh token.\n   * @param {string} AccessToken The session&#39;s access token.\n   */\n  constructor({ IdToken, RefreshToken, AccessToken } = {}) {\n    if (AccessToken == null || IdToken == null) {\n      throw new Error(&#39;Id token and Access Token must be present.&#39;);\n    }\n\n    this.idToken = IdToken;\n    this.refreshToken = RefreshToken;\n    this.accessToken = AccessToken;\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session&#39;s Id token\n   */\n  getIdToken() {\n    return this.idToken;\n  }\n\n  /**\n   * @returns {CognitoRefreshToken} the session&#39;s refresh token\n   */\n  getRefreshToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * @returns {CognitoAccessToken} the session&#39;s access token\n   */\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in tokens and the current time\n   * @returns {boolean} if the session is still valid\n   */\n  isValid() {\n    const now = Math.floor(new Date() / 1000);\n\n    return now &lt; this.accessToken.getExpiration() &amp;&amp; now &lt; this.idToken.getExpiration();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoUserSession.js&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst monthNames =\n  [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;, &#39;May&#39;, &#39;Jun&#39;, &#39;Jul&#39;, &#39;Aug&#39;, &#39;Sep&#39;, &#39;Oct&#39;, &#39;Nov&#39;, &#39;Dec&#39;];\nconst weekNames = [&#39;Sun&#39;, &#39;Mon&#39;, &#39;Tue&#39;, &#39;Wed&#39;, &#39;Thu&#39;, &#39;Fri&#39;, &#39;Sat&#39;];\n\n/** @class */\nexport default class DateHelper {\n  /**\n   * @returns {string} The current time in \&quot;ddd MMM D HH:mm:ss UTC YYYY\&quot; format.\n   */\n  getNowString() {\n    const now = new Date();\n\n    const weekDay = weekNames[now.getUTCDay()];\n    const month = monthNames[now.getUTCMonth()];\n    const day = now.getUTCDate();\n\n    let hours = now.getUTCHours();\n    if (hours &lt; 10) {\n      hours = `0${hours}`;\n    }\n\n    let minutes = now.getUTCMinutes();\n    if (minutes &lt; 10) {\n      minutes = `0${minutes}`;\n    }\n\n    let seconds = now.getUTCSeconds();\n    if (seconds &lt; 10) {\n      seconds = `0${seconds}`;\n    }\n\n    const year = now.getUTCFullYear();\n\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n\n    return dateNow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/DateHelper.js&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet dataMemory = {};\n\n/** @class */\nclass MemoryStorage {\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  static setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  static getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  static removeItem(key) {\n    return delete dataMemory[key];\n  }\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  static clear() {\n    dataMemory = {};\n    return dataMemory;\n  }\n}\n\n/** @class */\nexport default class StorageHelper {\n\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  constructor() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem(&#39;aws.cognito.test-ls&#39;, 1);\n      this.storageWindow.removeItem(&#39;aws.cognito.test-ls&#39;);\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n  getStorage() {\n    return this.storageWindow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/StorageHelper.js&quot;,&quot;module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\&quot;root\&quot;:[\&quot;AWSCognito\&quot;,\&quot;CognitoIdentityServiceProvider\&quot;],\&quot;commonjs2\&quot;:\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;,\&quot;commonjs\&quot;:\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;,\&quot;amd\&quot;:\&quot;aws-sdk/clients/cognitoidentityserviceprovider\&quot;}\n// module id = 11\n// module chunks = 0&quot;,&quot;module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\&quot;root\&quot;:[],\&quot;commonjs2\&quot;:\&quot;jsbn\&quot;,\&quot;commonjs\&quot;:\&quot;jsbn\&quot;,\&quot;amd\&quot;:\&quot;jsbn\&quot;}\n// module id = 12\n// module chunks = 0&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nexport default class AuthenticationDetails {\n  /**\n   * Constructs a new AuthenticationDetails object\n   * @param {object=} data Creation options.\n   * @param {string} data.Username User being authenticated.\n   * @param {string} data.Password Plain-text password to authenticate with.\n   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n   */\n  constructor(data) {\n    const { ValidationData, Username, Password } = data || {};\n    this.validationData = ValidationData || [];\n    this.username = Username;\n    this.password = Password;\n  }\n\n  /**\n   * @returns {string} the record&#39;s username\n   */\n  getUsername() {\n    return this.username;\n  }\n\n  /**\n   * @returns {string} the record&#39;s password\n   */\n  getPassword() {\n    return this.password;\n  }\n\n  /**\n   * @returns {Array} the record&#39;s validationData\n   */\n  getValidationData() {\n    return this.validationData;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/AuthenticationDetails.js&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CognitoIdentityServiceProvider from &#39;aws-sdk/clients/cognitoidentityserviceprovider&#39;;\n\nimport CognitoUser from &#39;./CognitoUser&#39;;\nimport StorageHelper from &#39;./StorageHelper&#39;;\n\n/** @class */\nexport default class CognitoUserPool {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   */\n  constructor(data) {\n    const { UserPoolId, ClientId } = data || {};\n    if (!UserPoolId || !ClientId) {\n      throw new Error(&#39;Both UserPoolId and ClientId are required.&#39;);\n    }\n    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n      throw new Error(&#39;Invalid UserPoolId format.&#39;);\n    }\n    const region = UserPoolId.split(&#39;_&#39;)[0];\n\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n\n    this.client = new CognitoIdentityServiceProvider({ apiVersion: &#39;2016-04-19&#39;, region });\n\n    this.storage = new StorageHelper().getStorage();\n  }\n\n  /**\n   * @returns {string} the user pool id\n   */\n  getUserPoolId() {\n    return this.userPoolId;\n  }\n\n  /**\n   * @returns {string} the client id\n   */\n  getClientId() {\n    return this.clientId;\n  }\n\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n  /**\n   * method for signing up a user\n   * @param {string} username User&#39;s username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {nodeCallback&lt;SignUpResult&gt;} callback Called on error or with the new user.\n   * @returns {void}\n   */\n  signUp(username, password, userAttributes, validationData, callback) {\n    this.client.makeUnauthenticatedRequest(&#39;signUp&#39;, {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData,\n    }, (err, data) =&gt; {\n      if (err) {\n        return callback(err, null);\n      }\n\n      const cognitoUser = {\n        Username: username,\n        Pool: this,\n      };\n\n      const returnData = {\n        user: new CognitoUser(cognitoUser),\n        userConfirmed: data.UserConfirmed,\n      };\n\n      return callback(null, returnData);\n    });\n  }\n\n\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */\n  getCurrentUser() {\n    const lastUserKey = `CognitoIdentityServiceProvider.${this.clientId}.LastAuthUser`;\n\n    const lastAuthUser = this.storage.getItem(lastUserKey);\n    if (lastAuthUser) {\n      const cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n      };\n\n      return new CognitoUser(cognitoUser);\n    }\n\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoUserPool.js&quot;,&quot;/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \&quot;License\&quot;).\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \&quot;license\&quot; file accompanying this file. This file is\n * distributed on an \&quot;AS IS\&quot; BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { default as AuthenticationDetails } from &#39;./AuthenticationDetails&#39;;\nexport { default as AuthenticationHelper } from &#39;./AuthenticationHelper&#39;;\nexport { default as CognitoAccessToken } from &#39;./CognitoAccessToken&#39;;\nexport { default as CognitoIdToken } from &#39;./CognitoIdToken&#39;;\nexport { default as CognitoRefreshToken } from &#39;./CognitoRefreshToken&#39;;\nexport { default as CognitoUser } from &#39;./CognitoUser&#39;;\nexport { default as CognitoUserAttribute } from &#39;./CognitoUserAttribute&#39;;\nexport { default as CognitoUserPool } from &#39;./CognitoUserPool&#39;;\nexport { default as CognitoUserSession } from &#39;./CognitoUserSession&#39;;\nexport { default as DateHelper } from &#39;./DateHelper&#39;;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js&quot;],&quot;sourceRoot&quot;:&quot;&quot;}</td>
      </tr>
</table>

  </div>

</div>

<button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
<div id="jump-to-line" style="display:none">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>


    </div>
  </div>

  </div>

      <div class="container site-footer-container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2017 <span title="0.07405s from github-fe158-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



  

  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha256-UGFpyy/nYlS5IejJRN1AblyrLXGeZX6s6K2phIYjFHI=" src="https://assets-cdn.github.com/assets/frameworks-506169cb2fe76254b921e8c944dd406e5cab2d719e657eace8ada98486231472.js"></script>
    <script async="async" crossorigin="anonymous" integrity="sha256-OwUhccbldh6xvjQrpACcNSox8X9TPGhbNX6pNZGCWO4=" src="https://assets-cdn.github.com/assets/github-3b052171c6e5761eb1be342ba4009c352a31f17f533c685b357ea935918258ee.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>


  </body>
</html>

